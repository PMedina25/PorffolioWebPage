[{"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\index.js":"1","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\ApolloProvider.js":"2","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\App.js":"3","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\AllProjects.js":"4","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Skills.js":"5","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Organizations.js":"6","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\graphql.js":"7","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\data\\about-me-data.js":"8","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\common\\Loader.js":"9","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\all-projects\\AllProjects.js":"10","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectCard.js":"11","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\OrganizationCard.js":"12","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\constants\\constants.js":"13","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\all-projects\\ProjectCard.js":"14","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectInfo.js":"15","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\SliderCard.js":"16","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\get-technology-icon.js":"17","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\common\\Navbar.js":"18","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Footer.js":"19","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\AboutMe.js":"20","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\Map.js":"21","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Home.js":"22","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\Technologies.js":"23","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\Projects.js":"24","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\Project.js":"25","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectSingleContainer.js":"26"},{"size":261,"mtime":1610707778683,"results":"27","hashOfConfig":"28"},{"size":369,"mtime":1613234341728,"results":"29","hashOfConfig":"28"},{"size":1042,"mtime":1613909710947,"results":"30","hashOfConfig":"28"},{"size":3688,"mtime":1613997864554,"results":"31","hashOfConfig":"28"},{"size":8617,"mtime":1613644150962,"results":"32","hashOfConfig":"28"},{"size":666,"mtime":1613248363911,"results":"33","hashOfConfig":"28"},{"size":493,"mtime":1613899871836,"results":"34","hashOfConfig":"28"},{"size":884,"mtime":1610969272671,"results":"35","hashOfConfig":"28"},{"size":516,"mtime":1613644150938,"results":"36","hashOfConfig":"28"},{"size":5019,"mtime":1613644150933,"results":"37","hashOfConfig":"28"},{"size":1567,"mtime":1613644150944,"results":"38","hashOfConfig":"28"},{"size":5476,"mtime":1613763311382,"results":"39","hashOfConfig":"28"},{"size":5242,"mtime":1613836797400,"results":"40","hashOfConfig":"28"},{"size":1432,"mtime":1613644150936,"results":"41","hashOfConfig":"28"},{"size":2032,"mtime":1613644150946,"results":"42","hashOfConfig":"28"},{"size":624,"mtime":1613406218450,"results":"43","hashOfConfig":"28"},{"size":4204,"mtime":1613644150964,"results":"44","hashOfConfig":"28"},{"size":1334,"mtime":1613763311379,"results":"45","hashOfConfig":"28"},{"size":290,"mtime":1613644150955,"results":"46","hashOfConfig":"28"},{"size":4771,"mtime":1613763311412,"results":"47","hashOfConfig":"28"},{"size":2966,"mtime":1613763311376,"results":"48","hashOfConfig":"28"},{"size":2077,"mtime":1613763311416,"results":"49","hashOfConfig":"28"},{"size":7143,"mtime":1613763311377,"results":"50","hashOfConfig":"28"},{"size":3149,"mtime":1613997910424,"results":"51","hashOfConfig":"28"},{"size":2672,"mtime":1613994638693,"results":"52","hashOfConfig":"28"},{"size":2294,"mtime":1613989460291,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"insojy",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"56"},"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\index.js",[],["119","120"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\ApolloProvider.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\App.js",["121"],"import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Import bootstrap components\r\nimport { Container } from 'react-bootstrap';\r\n\r\n// Import pages\r\nimport NavBar from './components/common/Navbar';\r\nimport Home from './components/Home';\r\nimport AboutMe from './components/about-me/AboutMe';\r\nimport Skills from './pages/Skills';\r\nimport Organizations from './pages/Organizations';\r\nimport Projects from './components/projects/Projects';\r\nimport AllProjects from './pages/AllProjects';\r\nimport Footer from './pages/Footer';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Route path=\"/\" exact>\r\n          <NavBar />\r\n          <Container>\r\n            <Home />\r\n            <AboutMe />\r\n            <Organizations />\r\n            <Projects />\r\n          </Container>\r\n        </Route>\r\n        <Route path=\"/projects\" component={AllProjects} exact />\r\n        <Footer />\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\AllProjects.js",["122"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Skills.js",["123","124"],"import React, { useEffect, useState } from 'react';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n// Import bootstrap components\r\nimport { Container, Image } from 'react-bootstrap';\r\n\r\n// Import components\r\nimport Sidebar from '../components/common/Navbar';\r\n\r\n// Import skills constants\r\nimport { KNOWLEDGE_FIELDS, TECHNOLOGY_FIELDS } from '../constants/constants';\r\n\r\nconst Skills = () => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    useEffect(() => {\r\n        Aos.init({duration: 1000});\r\n    }, []);\r\n\r\n    let frontendGridColumns, backendGridColumns, toolsCloudGridColumns, embeddedSystemsGridColumns;\r\n\r\n    if (TECHNOLOGY_FIELDS.frontend.length % 5 === 0) {\r\n        frontendGridColumns = '1fr 1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.frontend.length % 4 === 0) {\r\n        frontendGridColumns = '1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.frontend.length % 3 === 0){\r\n        frontendGridColumns = '1fr 1fr 1fr';\r\n    } else {\r\n        frontendGridColumns = '1fr 1fr';\r\n    }\r\n\r\n    if (TECHNOLOGY_FIELDS.backend.length % 5 === 0) {\r\n        backendGridColumns = '1fr 1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.backend.length % 4 === 0) {\r\n        backendGridColumns = '1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.backend.length % 3 === 0){\r\n        backendGridColumns = '1fr 1fr 1fr';\r\n    } else {\r\n        backendGridColumns = '1fr 1fr';\r\n    }\r\n\r\n    if (TECHNOLOGY_FIELDS.tools_cloud.length % 5 === 0) {\r\n        toolsCloudGridColumns = '1fr 1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.tools_cloud.length % 4 === 0) {\r\n        toolsCloudGridColumns = '1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.tools_cloud.length % 3 === 0){\r\n        toolsCloudGridColumns = '1fr 1fr 1fr';\r\n    } else {\r\n        toolsCloudGridColumns = '1fr 1fr';\r\n    }\r\n\r\n    if (TECHNOLOGY_FIELDS.embedded_systems.length % 5 === 0) {\r\n        embeddedSystemsGridColumns = '1fr 1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.embedded_systems.length % 4 === 0) {\r\n        embeddedSystemsGridColumns = '1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.embedded_systems.length % 3 === 0){\r\n        embeddedSystemsGridColumns = '1fr 1fr 1fr';\r\n    } else {\r\n        embeddedSystemsGridColumns = '1fr 1fr';\r\n    }\r\n\r\n    return (\r\n        <div id=\"skills\">\r\n            <h1><span className=\"navigation-color\">{'<'}</span>Skills{'  '}<span className=\"navigation-color\">{'/>'}</span></h1>\r\n\r\n            <div className=\"btn-container\">\r\n                {\r\n                    KNOWLEDGE_FIELDS.map((field, index) => {\r\n                        return (\r\n                            <button \r\n                                key={field} \r\n                                onClick={() => setValue(index)} \r\n                                className={`field-btn ${value === index && 'active-btn'}`\r\n                            }>\r\n                                {field}\r\n                            </button>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {value === 0 &&\r\n                <>\r\n                    <article id=\"frontend-content\" className=\"field-content\" style={{'gridTemplateColumns': `${frontendGridColumns}`}}>\r\n                    {\r\n                        TECHNOLOGY_FIELDS.frontend.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"technologies-grid-item\" data-aos=\"zoom-in\">\r\n                                    <Image className=\"technology-icon\" src={technology.icon} alt={`${technology.name} icon`} />\r\n                                    <p>{technology.name}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    </article>\r\n                    <div className=\"field-info\">\r\n                        <p>\r\n                            In regards to the frontend, this involves skilled in <strong>HTML</strong>, <strong>CSS</strong>, <strong>JavaScript</strong> and  \r\n                            {' '}<strong>JSX</strong>, besides CSS frameworks such as <strong>Bootstrap</strong> and <strong>Semantic UI</strong>. For managing react states, I have developed some applications \r\n                            with <strong>React Hooks</strong>, <strong>Context API</strong> and <strong>Redux</strong>.\r\n                        </p>\r\n                    </div>\r\n                </>\r\n            }\r\n            {value === 1 &&\r\n                <>\r\n                    <article id=\"backend-content\" className=\"field-content\" style={{'gridTemplateColumns': `${backendGridColumns}`}}>\r\n                    {\r\n                        TECHNOLOGY_FIELDS.backend.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"technologies-grid-item\" data-aos=\"zoom-in\">\r\n                                    <Image className=\"technology-icon\" src={technology.icon} alt={`${technology.name} icon`} />\r\n                                    <p>{technology.name}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    </article>\r\n                    <div className=\"field-info\">\r\n                        <p>\r\n                            <strong>Node</strong> and <strong>Express</strong> as the mainstay, as well as <strong>MongoDB</strong> as the primary database system. Moreover, I have developed\r\n                            {' '}some applications using <strong>GraphQL</strong> and <strong>Apollo Server</strong> for the backend.\r\n                        </p>\r\n                        <p>\r\n                            For mobile app development, I have used <strong>Firebase</strong> and <strong>SQLite</strong>.\r\n                        </p>\r\n                    </div>\r\n                </>\r\n            }\r\n            {value === 2 &&\r\n                <>\r\n                    <article id=\"tools-content\" className=\"field-content\" style={{'gridTemplateColumns': `${toolsCloudGridColumns}`}}>\r\n                    {\r\n                        TECHNOLOGY_FIELDS.tools_cloud.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"technologies-grid-item\" data-aos=\"zoom-in\">\r\n                                    <Image className=\"technology-icon\" src={technology.icon} alt={`${technology.name} icon`} />\r\n                                    <p>{technology.name}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    </article>\r\n                    <div className=\"field-info\">\r\n                        <p>\r\n                            <strong>Visual Studio Code</strong> as the main IDE, with experience in <strong>Git</strong> version control system and <strong>Git Flow</strong>. Furthermore,\r\n                            {' '}knowledge in deploying apps with <strong>Docker</strong> and <strong>Heroku</strong>.\r\n                        </p>\r\n                    </div>\r\n                </>\r\n            }\r\n            {value === 3 &&\r\n                <>\r\n                    <article id=\"embedded-systems-content\" className=\"field-content\" style={{'gridTemplateColumns': `${embeddedSystemsGridColumns}`}}>\r\n                    {\r\n                        TECHNOLOGY_FIELDS.embedded_systems.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"technologies-grid-item\" data-aos=\"zoom-in\">\r\n                                    <Image className=\"technology-icon\" src={technology.icon} alt={`${technology.name} icon`} />\r\n                                    <p>{technology.name}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    </article>\r\n                    <div className=\"field-info\">\r\n                        <p>\r\n                            I have built plenty of embedded systems with <strong>Arduino</strong> and <strong>Raspberry Pi</strong>,\r\n                            {' '} with the use of different wireless communication protocols (<strong>Bluetooth</strong>, <strong>LoRa</strong>\r\n                            {' '} and <strong>Zigbee</strong>) and connected to the cloud.\r\n                        </p>\r\n                    </div>\r\n                </> \r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default Skills;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Organizations.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\graphql.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\data\\about-me-data.js",[],["125","126"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\common\\Loader.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\all-projects\\AllProjects.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectCard.js",["127"],"import React, { useState, useEffect } from 'react';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n// Import bootstrap components\r\nimport { Button, Card, Col } from 'react-bootstrap';\r\n\r\n// Import components\r\nimport ProjectInfo from './ProjectInfo';\r\n\r\nconst ProjectCard = ({ title, description, technologies, startDate, endDate, url, image, projectPage }) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        Aos.init({duration: 1000});\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <Col xs={12} sm={12} md={6} lg={6} xl={4}>\r\n            <Card className=\"project-card project-card-hover\">\r\n                <Card.Img className=\"img-project\" variant=\"top\" src={image} />\r\n                <Card.Body className=\"project-card-body\">\r\n                    <Card.Title>{title}</Card.Title>\r\n                    <Card.Text style={{'textAlign': 'justify'}}>\r\n                        {description}\r\n                    </Card.Text>\r\n                    <button type=\"button\" className=\"general-button\" style={{'marginTop': 'auto'}} onClick={() => setModalShow(true)}>\r\n                        Show More\r\n                    </button>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n\r\n        <ProjectInfo \r\n          show={modalShow} \r\n          onHide={() => setModalShow(false)} \r\n          title={title} \r\n          description={description} \r\n          technologies={technologies} \r\n          url={url} \r\n          image={image} \r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;\r\n",["128","129"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\OrganizationCard.js",["130","131","132","133","134"],"import React, { useState, useEffect } from 'react';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n// import Swiper JS\r\nimport Swiper from 'swiper';\r\n// import Swiper styles\r\nimport 'swiper/swiper-bundle.css';\r\n\r\n// Import bootstrap components\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\n\r\n// Import components\r\nimport Sidebar from '../common/Navbar';\r\nimport SliderCard from './SliderCard';\r\n\r\n // core version + navigation, pagination modules:\r\n import SwiperCore, { Navigation, Pagination, EffectCube, Autoplay } from 'swiper/core';\r\n\r\n // configure Swiper to use modules\r\n SwiperCore.use([Navigation, Pagination, EffectCube, Autoplay]);\r\n\r\n\r\nconst OrganizationCard = ({ data }) => {\r\n  const eduOrgs = data.getOrganizations.filter(organization => organization.type === 'education');\r\n  const expOrgs = data.getOrganizations.filter(organization => organization.type === 'experience');\r\n  const certOrgs = data.getOrganizations.filter(organization => organization.type === 'certification');\r\n  \r\n  useEffect(() => {\r\n    // init Swiper:\r\n    const swiper = new Swiper('.swiper-container', {\r\n      effect: 'cube',\r\n      grabCursor: true,\r\n      loop: true,\r\n      autoplay: {\r\n        delay: 3000,\r\n        disableOnInteraction: false\r\n      },\r\n      cubeEffect: {\r\n        shadow: true,\r\n        slideShadows: true,\r\n        shadowOffset: 20,\r\n        shadowScale: 0.94,\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Aos.init({duration: 1000});\r\n  }, []);\r\n\r\n  return (\r\n      <div id=\"organizations\">\r\n          <Row>\r\n            <Col className=\"card-column\" xs={12} md={6} lg={4}>\r\n              <h1 className=\"organization-title\" data-aos=\"fade-down\"><span className=\"navigation-color\">{'<'}</span>Training{'  '}<span className=\"navigation-color\">{'/>'}</span></h1>\r\n              <div className=\"swiper-container\" data-aos=\"fade-down\">\r\n                <div className=\"swiper-wrapper\">\r\n\r\n                  {eduOrgs &&\r\n                  eduOrgs\r\n                  .map((organization, organizationIndex) => {\r\n                      return (\r\n                          <div key={organizationIndex} className=\"swiper-slide\" style={{'backgroundColor': 'white', 'color': 'black'}}>\r\n                              <SliderCard\r\n                                  name={organization.name} \r\n                                  description={organization.description} \r\n                                  startDate={organization.startDate} \r\n                                  endDate={organization.endDate} \r\n                                  url={organization.url} \r\n                                  logo={organization.image} />\r\n                          </div>\r\n                      );\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"card-column\" xs={12} md={6} lg={4}>\r\n              <h1 className=\"organization-title\" data-aos=\"fade-down\"><span className=\"navigation-color\">{'<'}</span>Experience{'  '}<span className=\"navigation-color\">{'/>'}</span></h1>\r\n              <div className=\"swiper-container\" data-aos=\"fade-down\">\r\n                <div className=\"swiper-wrapper\">\r\n\r\n                  {expOrgs &&\r\n                  expOrgs\r\n                  .map((organization, organizationIndex) => {\r\n                      return (\r\n                          <div key={organizationIndex} className=\"swiper-slide\" style={{'backgroundColor': 'white', 'color': 'black'}}>\r\n                              <SliderCard\r\n                                  name={organization.name} \r\n                                  description={organization.description} \r\n                                  startDate={organization.startDate} \r\n                                  endDate={organization.endDate} \r\n                                  url={organization.url} \r\n                                  logo={organization.image} />\r\n                          </div>\r\n                      );\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"card-column\" xs={12} md={6} lg={4}>\r\n              <h1 className=\"organization-title\" data-aos=\"fade-down\"><span className=\"navigation-color\">{'<'}</span>Certifications{'  '}<span className=\"navigation-color\">{'/>'}</span></h1>\r\n              <div className=\"swiper-container\" data-aos=\"fade-down\">\r\n                <div className=\"swiper-wrapper\">\r\n\r\n                  {certOrgs &&\r\n                  certOrgs\r\n                  .map((organization, organizationIndex) => {\r\n                      return (\r\n                          <div key={organizationIndex} className=\"swiper-slide\" style={{'backgroundColor': 'white', 'color': 'black'}}>\r\n                              <SliderCard\r\n                                  name={organization.name} \r\n                                  description={organization.description} \r\n                                  startDate={organization.startDate} \r\n                                  endDate={organization.endDate} \r\n                                  url={organization.url} \r\n                                  logo={organization.image} />\r\n                          </div>\r\n                      );\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n  )\r\n}\r\n\r\n\r\nexport default OrganizationCard;","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\constants\\constants.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\all-projects\\ProjectCard.js",["135"],"import React, { useState, useEffect } from 'react';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n// Import bootstrap components\r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\n// Import components\r\nimport ProjectInfo from '../projects/ProjectInfo';\r\n\r\nconst ProjectCard = ({ title, description, technologies, startDate, endDate, url, image, projectPage }) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        Aos.init({duration: 1000});\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <Card className=\"all-projects-card\" data-aos=\"fade-up\">\r\n            <Card.Img className=\"img-project\" variant=\"top\" src={image} />\r\n            <Card.Body className=\"project-card-body\">\r\n                <Card.Title>{title}</Card.Title>\r\n                <Card.Text  style={{'textAlign': 'justify'}}>\r\n                    {description}\r\n                </Card.Text>\r\n                <button type=\"button\" className=\"general-button\" onClick={() => setModalShow(true)}>\r\n                    Show More\r\n                </button>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n        <ProjectInfo \r\n          show={modalShow} \r\n          onHide={() => setModalShow(false)} \r\n          title={title} \r\n          description={description} \r\n          technologies={technologies} \r\n          url={url} \r\n          image={image} \r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectInfo.js",["136","137"],"import React from 'react';\r\n\r\nimport { Button, Image, Modal } from 'react-bootstrap';\r\n\r\nimport { getTechnologyIcon } from '../../utils/get-technology-icon';\r\n\r\nconst ProjectInfo = (props) => {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            className=\"project-modal\"\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header className=\"project-modal-header\" closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {props.title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"project-modal-body\">\r\n                <Image className=\"modal-image\" src={props.image} />\r\n                <div className=\"project-modal-content\">\r\n                    <div className=\"project-modal-description\">\r\n                        <p>\r\n                            {props.description}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"project-technologies-grid\">\r\n                        {props.technologies.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"project-grid-item\">\r\n                                    {getTechnologyIcon(technology)}\r\n                                    <div className=\"technology-name\">\r\n                                        {technology}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                \r\n            </Modal.Body>\r\n            {props.url &&\r\n                <Modal.Footer className=\"project-modal-footer\">\r\n                    <a className=\"general-button\" type=\"button\" href={props.url} target=\"_blank\">Go to project</a>\r\n                </Modal.Footer>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ProjectInfo;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\SliderCard.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\get-technology-icon.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\common\\Navbar.js",["138"],"import React, { useState } from 'react';\r\n\r\nimport { GiHamburgerMenu } from 'react-icons/gi';\r\n\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <Navbar id=\"navbar\" expand=\"lg\" fixed=\"top\">\r\n            <Navbar.Brand className=\"navigation-color navbar-brand\" href=\"#home\">Pablomedina.</Navbar.Brand>\r\n            <Navbar.Toggle id=\"navbar-collapse-button\"  aria-controls=\"basic-navbar-nav\"><GiHamburgerMenu id=\"navbar-toggle-icon\" /></Navbar.Toggle>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"navigation-color\">\r\n                <Nav id=\"navigation-items\" className=\"mr-auto\">\r\n                    <Nav.Link className=\"link-item\" href=\"#home\">Home{' '}<span className=\"navigation-color\">{'/>'}</span></Nav.Link>\r\n                    <Nav.Link className=\"link-item\" href=\"#about\">About{' '}<span className=\"navigation-color\">{'/>'}</span></Nav.Link>\r\n                    <Nav.Link className=\"link-item\" href=\"#organizations\">Training && Experience{' '}<span className=\"navigation-color\">{'/>'}</span></Nav.Link>\r\n                    <Nav.Link className=\"link-item\" href=\"#projects\">Projects{' '}<span className=\"navigation-color\">{'/>'}</span></Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Footer.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\AboutMe.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\Map.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Home.js",["139","140","141","142","143","144","145","146"],"import React, { useState } from 'react';\r\n\r\n// Import bootstrap components\r\nimport { Col, Container, Row  } from 'react-bootstrap';\r\n\r\n// Import react icons\r\nimport { FaLinkedin, FaGithub } from 'react-icons/fa';\r\nimport { HiOutlineMail } from 'react-icons/hi';\r\nimport { AiOutlinePhone } from 'react-icons/ai';\r\n\r\nconst Home = () => {\r\n    const [displayEmail, setDisplayEmail] = useState(false);\r\n    const [displayPhone, setDisplayPhone] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"home\">\r\n                <div id=\"home-text\">\r\n                    <h1>Hi, this is Pablo</h1>\r\n                    <h1 style={{'color': '#8892B0'}}>Full Stack Developer (MERN Stack)</h1>\r\n                    <p style={{'color': '#8892B0'}}>I'm a Computer Engineer based in Seville and Amsterdam, specialized in building web and mobile apps, both the frontend and the backend.</p>\r\n                </div>\r\n                \r\n                <Row id=\"social-icons\">\r\n                        <a href=\"https://www.linkedin.com/in/pablo-medina-rodr%C3%ADguez-a3a8b9135/\" rel=\"noreferrer\" alt=\"linkedin profile\" target=\"_blank\" className=\"btn\">\r\n                            <FaLinkedin className=\"social-network-icon\" />\r\n                        </a>\r\n                        <a href=\"https://github.com/PMedina25\" rel=\"noreferrer\" alt=\"github profile\" target=\"_blank\" className=\"btn\">\r\n                            <FaGithub className=\"social-network-icon\" />\r\n                        </a>\r\n                        <a  rel=\"noreferrer\" alt=\"email account\" className=\"btn\" onClick={() => alert('pablo.medina.us@gmail.com')}>\r\n                            <HiOutlineMail id=\"email-icon\" className=\"social-network-icon\" />\r\n                        </a>\r\n                        <a rel=\"noreferrer\" alt=\"email account\" className=\"btn\" onClick={() => alert('+34 639 538 774')}>\r\n                            <AiOutlinePhone className=\"social-network-icon\" />\r\n                        </a>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\Technologies.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\Projects.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\Project.js",["147","148","149"],"import React, { useEffect } from 'react';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport { Row, Col, Image } from 'react-bootstrap';\r\n\r\nimport { AiFillGithub } from 'react-icons/ai';\r\nimport { BiLinkExternal } from 'react-icons/bi';\r\n\r\nimport { getTechnologyIcon } from '../../utils/get-technology-icon';\r\n\r\n\r\nconst Project = ({ project }) => {\r\n    useEffect(() => {\r\n        Aos.init({duration: 1000});\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"project\" data-aos=\"fade-up\">\r\n            <Row>\r\n                <Col md={6} className=\"project-image-container\">\r\n                    <div className=\"overlay\">\r\n                        <a href={project.url} target=\"_blank\">\r\n                            <Image src={project.image} fluid />\r\n                        </a>\r\n                    </div>\r\n                </Col>\r\n                <Col md={6} className=\"project-info-col\">\r\n                    <div className=\"project-info\">\r\n                        <h4>{project.title}</h4>\r\n                        <div className=\"project-description\">\r\n                            <p>{project.description}</p>\r\n                        </div>\r\n                        <div className=\"project-technologies-grid\">\r\n                            {project.technologies.map((technology, index) => {\r\n                                return (\r\n                                    <div key={index} className=\"project-technology-item\">\r\n                                        {getTechnologyIcon(technology)}\r\n                                        <div className=\"technology-name\">\r\n                                            {technology}\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"project-links\">\r\n                            {\r\n                                project.github &&\r\n                                <a href={project.github} className=\"project-link-icon\" target=\"_blank\">\r\n                                    <AiFillGithub />\r\n                                </a>\r\n                            }\r\n                            {\r\n                                project.url &&\r\n                                <a href={project.url} className=\"project-link-icon\" target=\"_blank\">\r\n                                    <BiLinkExternal />\r\n                                </a>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Project;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectSingleContainer.js",["150","151"],"import React from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport { getTechnologyIcon } from '../../utils/get-technology-icon';\r\n\r\nimport { AiFillGithub } from 'react-icons/ai';\r\nimport { BiLinkExternal } from 'react-icons/bi';\r\n\r\nconst ProjectSingleContainer = ({ project }) => {\r\n    return (\r\n        <div className=\"project-single-container\">\r\n            <div className=\"image-project-single-container\">\r\n                <div className=\"overlay\">\r\n                    <Image src={project.image} fluid />\r\n                </div>\r\n                <div className=\"project-single-container-info\">\r\n                    <h4>{project.title}</h4>\r\n                    <div className=\"project-single-container-description\">\r\n                        <p>{project.description}</p>\r\n                    </div>\r\n                    <div className=\"project-single-container-technologies-grid\">\r\n                        {project.technologies.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"project-single-container-technology-item\">\r\n                                    {getTechnologyIcon(technology)}\r\n                                    <div className=\"technology-name\">\r\n                                        {technology}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <div className=\"project-single-container-links\">\r\n                        {\r\n                            project.github &&\r\n                            <a href={project.github} className=\"project-single-container-link-icon\" target=\"_blank\">\r\n                                <AiFillGithub />\r\n                            </a>\r\n                        }\r\n                        {\r\n                            project.url &&\r\n                            <a href={project.url} className=\"project-single-container-link-icon\" target=\"_blank\">\r\n                                <BiLinkExternal />\r\n                            </a>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectSingleContainer;\r\n",{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":12,"column":8,"nodeType":"158","messageId":"159","endLine":12,"endColumn":14},{"ruleId":"156","severity":1,"message":"160","line":10,"column":8,"nodeType":"158","messageId":"159","endLine":10,"endColumn":16},{"ruleId":"156","severity":1,"message":"161","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":19},{"ruleId":"156","severity":1,"message":"162","line":9,"column":8,"nodeType":"158","messageId":"159","endLine":9,"endColumn":15},{"ruleId":"152","replacedBy":"163"},{"ruleId":"154","replacedBy":"164"},{"ruleId":"156","severity":1,"message":"165","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":16},{"ruleId":"152","replacedBy":"166"},{"ruleId":"154","replacedBy":"167"},{"ruleId":"156","severity":1,"message":"168","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"169","line":11,"column":10,"nodeType":"158","messageId":"159","endLine":11,"endColumn":14},{"ruleId":"156","severity":1,"message":"161","line":11,"column":21,"nodeType":"158","messageId":"159","endLine":11,"endColumn":30},{"ruleId":"156","severity":1,"message":"162","line":14,"column":8,"nodeType":"158","messageId":"159","endLine":14,"endColumn":15},{"ruleId":"156","severity":1,"message":"170","line":31,"column":11,"nodeType":"158","messageId":"159","endLine":31,"endColumn":17},{"ruleId":"156","severity":1,"message":"165","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":16},{"ruleId":"156","severity":1,"message":"165","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":46,"column":82,"nodeType":"173","endLine":46,"endColumn":97},{"ruleId":"156","severity":1,"message":"168","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"174","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":13},{"ruleId":"156","severity":1,"message":"161","line":4,"column":15,"nodeType":"158","messageId":"159","endLine":4,"endColumn":24},{"ruleId":"156","severity":1,"message":"175","line":12,"column":12,"nodeType":"158","messageId":"159","endLine":12,"endColumn":24},{"ruleId":"156","severity":1,"message":"176","line":12,"column":26,"nodeType":"158","messageId":"159","endLine":12,"endColumn":41},{"ruleId":"156","severity":1,"message":"177","line":13,"column":12,"nodeType":"158","messageId":"159","endLine":13,"endColumn":24},{"ruleId":"156","severity":1,"message":"178","line":13,"column":26,"nodeType":"158","messageId":"159","endLine":13,"endColumn":41},{"ruleId":"179","severity":1,"message":"180","line":31,"column":25,"nodeType":"181","endLine":31,"endColumn":133},{"ruleId":"179","severity":1,"message":"180","line":34,"column":25,"nodeType":"181","endLine":34,"endColumn":122},{"ruleId":"171","severity":1,"message":"172","line":22,"column":47,"nodeType":"173","endLine":22,"endColumn":62},{"ruleId":"171","severity":1,"message":"172","line":48,"column":88,"nodeType":"173","endLine":48,"endColumn":103},{"ruleId":"171","severity":1,"message":"172","line":54,"column":85,"nodeType":"173","endLine":54,"endColumn":100},{"ruleId":"171","severity":1,"message":"172","line":35,"column":101,"nodeType":"173","endLine":35,"endColumn":116},{"ruleId":"171","severity":1,"message":"172","line":41,"column":98,"nodeType":"173","endLine":41,"endColumn":113},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'Skills' is defined but never used.","Identifier","unusedVar","'Projects' is defined but never used.","'Container' is defined but never used.","'Sidebar' is defined but never used.",["182"],["183"],"'Button' is defined but never used.",["182"],["183"],"'useState' is defined but never used.","'Card' is defined but never used.","'swiper' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Col' is defined but never used.","'displayEmail' is assigned a value but never used.","'setDisplayEmail' is assigned a value but never used.","'displayPhone' is assigned a value but never used.","'setDisplayPhone' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]