[{"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\index.js":"1","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\ApolloProvider.js":"2","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\App.js":"3","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\AllProjects.js":"4","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Home.js":"5","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Skills.js":"6","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\AboutMe.js":"7","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Projects.js":"8","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Organizations.js":"9","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\graphql.js":"10","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\data\\about-me-data.js":"11","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\common\\Loader.js":"12","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\all-projects\\AllProjects.js":"13","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectCard.js":"14","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\Question.js":"15","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\OrganizationCard.js":"16","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\constants\\constants.js":"17","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\all-projects\\ProjectCard.js":"18","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectInfo.js":"19","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\SliderCard.js":"20","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\get-technology-icon.js":"21","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\common\\Navbar.js":"22","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Footer.js":"23"},{"size":261,"mtime":1610707778683,"results":"24","hashOfConfig":"25"},{"size":369,"mtime":1613234341728,"results":"26","hashOfConfig":"25"},{"size":1013,"mtime":1613588235426,"results":"27","hashOfConfig":"25"},{"size":860,"mtime":1613248363910,"results":"28","hashOfConfig":"25"},{"size":2077,"mtime":1613640626362,"results":"29","hashOfConfig":"25"},{"size":8617,"mtime":1613587095698,"results":"30","hashOfConfig":"25"},{"size":7021,"mtime":1613641419675,"results":"31","hashOfConfig":"25"},{"size":4122,"mtime":1613588092649,"results":"32","hashOfConfig":"25"},{"size":666,"mtime":1613248363911,"results":"33","hashOfConfig":"25"},{"size":477,"mtime":1610707778704,"results":"34","hashOfConfig":"25"},{"size":884,"mtime":1610969272671,"results":"35","hashOfConfig":"25"},{"size":516,"mtime":1613587095671,"results":"36","hashOfConfig":"25"},{"size":5019,"mtime":1613638741210,"results":"37","hashOfConfig":"25"},{"size":1567,"mtime":1613587095681,"results":"38","hashOfConfig":"25"},{"size":718,"mtime":1610969272641,"results":"39","hashOfConfig":"25"},{"size":5477,"mtime":1613642778265,"results":"40","hashOfConfig":"25"},{"size":5242,"mtime":1613587095686,"results":"41","hashOfConfig":"25"},{"size":1432,"mtime":1613638322786,"results":"42","hashOfConfig":"25"},{"size":2032,"mtime":1613587095683,"results":"43","hashOfConfig":"25"},{"size":624,"mtime":1613406218450,"results":"44","hashOfConfig":"25"},{"size":4204,"mtime":1613587095698,"results":"45","hashOfConfig":"25"},{"size":1335,"mtime":1613639709180,"results":"46","hashOfConfig":"25"},{"size":290,"mtime":1613587095688,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"insojy",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\index.js",[],["102","103"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\ApolloProvider.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\App.js",["104"],"import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Import bootstrap components\r\nimport { Container } from 'react-bootstrap';\r\n\r\n// Import pages\r\nimport NavBar from './components/common/Navbar';\r\nimport Home from './pages/Home';\r\nimport AboutMe from './pages/AboutMe';\r\nimport Skills from './pages/Skills';\r\nimport Organizations from './pages/Organizations';\r\nimport Projects from './pages/Projects';\r\nimport AllProjects from './pages/AllProjects';\r\nimport Footer from './pages/Footer';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Route path=\"/\" exact>\r\n          <NavBar />\r\n          <Container>\r\n            <Home />\r\n            <AboutMe />\r\n            <Organizations />\r\n            <Projects />\r\n          </Container>\r\n        </Route>\r\n          <Route path=\"/projects\" component={AllProjects} exact />\r\n          <Footer />\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\AllProjects.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Home.js",["105","106","107","108","109","110","111","112"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Skills.js",["113","114"],"import React, { useEffect, useState } from 'react';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n// Import bootstrap components\r\nimport { Container, Image } from 'react-bootstrap';\r\n\r\n// Import components\r\nimport Sidebar from '../components/common/Navbar';\r\n\r\n// Import skills constants\r\nimport { KNOWLEDGE_FIELDS, TECHNOLOGY_FIELDS } from '../constants/constants';\r\n\r\nconst Skills = () => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    useEffect(() => {\r\n        Aos.init({duration: 1000});\r\n    }, []);\r\n\r\n    let frontendGridColumns, backendGridColumns, toolsCloudGridColumns, embeddedSystemsGridColumns;\r\n\r\n    if (TECHNOLOGY_FIELDS.frontend.length % 5 === 0) {\r\n        frontendGridColumns = '1fr 1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.frontend.length % 4 === 0) {\r\n        frontendGridColumns = '1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.frontend.length % 3 === 0){\r\n        frontendGridColumns = '1fr 1fr 1fr';\r\n    } else {\r\n        frontendGridColumns = '1fr 1fr';\r\n    }\r\n\r\n    if (TECHNOLOGY_FIELDS.backend.length % 5 === 0) {\r\n        backendGridColumns = '1fr 1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.backend.length % 4 === 0) {\r\n        backendGridColumns = '1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.backend.length % 3 === 0){\r\n        backendGridColumns = '1fr 1fr 1fr';\r\n    } else {\r\n        backendGridColumns = '1fr 1fr';\r\n    }\r\n\r\n    if (TECHNOLOGY_FIELDS.tools_cloud.length % 5 === 0) {\r\n        toolsCloudGridColumns = '1fr 1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.tools_cloud.length % 4 === 0) {\r\n        toolsCloudGridColumns = '1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.tools_cloud.length % 3 === 0){\r\n        toolsCloudGridColumns = '1fr 1fr 1fr';\r\n    } else {\r\n        toolsCloudGridColumns = '1fr 1fr';\r\n    }\r\n\r\n    if (TECHNOLOGY_FIELDS.embedded_systems.length % 5 === 0) {\r\n        embeddedSystemsGridColumns = '1fr 1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.embedded_systems.length % 4 === 0) {\r\n        embeddedSystemsGridColumns = '1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.embedded_systems.length % 3 === 0){\r\n        embeddedSystemsGridColumns = '1fr 1fr 1fr';\r\n    } else {\r\n        embeddedSystemsGridColumns = '1fr 1fr';\r\n    }\r\n\r\n    return (\r\n        <div id=\"skills\">\r\n            <h1><span className=\"navigation-color\">{'<'}</span>Skills{'  '}<span className=\"navigation-color\">{'/>'}</span></h1>\r\n\r\n            <div className=\"btn-container\">\r\n                {\r\n                    KNOWLEDGE_FIELDS.map((field, index) => {\r\n                        return (\r\n                            <button \r\n                                key={field} \r\n                                onClick={() => setValue(index)} \r\n                                className={`field-btn ${value === index && 'active-btn'}`\r\n                            }>\r\n                                {field}\r\n                            </button>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {value === 0 &&\r\n                <>\r\n                    <article id=\"frontend-content\" className=\"field-content\" style={{'gridTemplateColumns': `${frontendGridColumns}`}}>\r\n                    {\r\n                        TECHNOLOGY_FIELDS.frontend.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"technologies-grid-item\" data-aos=\"zoom-in\">\r\n                                    <Image className=\"technology-icon\" src={technology.icon} alt={`${technology.name} icon`} />\r\n                                    <p>{technology.name}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    </article>\r\n                    <div className=\"field-info\">\r\n                        <p>\r\n                            In regards to the frontend, this involves skilled in <strong>HTML</strong>, <strong>CSS</strong>, <strong>JavaScript</strong> and  \r\n                            {' '}<strong>JSX</strong>, besides CSS frameworks such as <strong>Bootstrap</strong> and <strong>Semantic UI</strong>. For managing react states, I have developed some applications \r\n                            with <strong>React Hooks</strong>, <strong>Context API</strong> and <strong>Redux</strong>.\r\n                        </p>\r\n                    </div>\r\n                </>\r\n            }\r\n            {value === 1 &&\r\n                <>\r\n                    <article id=\"backend-content\" className=\"field-content\" style={{'gridTemplateColumns': `${backendGridColumns}`}}>\r\n                    {\r\n                        TECHNOLOGY_FIELDS.backend.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"technologies-grid-item\" data-aos=\"zoom-in\">\r\n                                    <Image className=\"technology-icon\" src={technology.icon} alt={`${technology.name} icon`} />\r\n                                    <p>{technology.name}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    </article>\r\n                    <div className=\"field-info\">\r\n                        <p>\r\n                            <strong>Node</strong> and <strong>Express</strong> as the mainstay, as well as <strong>MongoDB</strong> as the primary database system. Moreover, I have developed\r\n                            {' '}some applications using <strong>GraphQL</strong> and <strong>Apollo Server</strong> for the backend.\r\n                        </p>\r\n                        <p>\r\n                            For mobile app development, I have used <strong>Firebase</strong> and <strong>SQLite</strong>.\r\n                        </p>\r\n                    </div>\r\n                </>\r\n            }\r\n            {value === 2 &&\r\n                <>\r\n                    <article id=\"tools-content\" className=\"field-content\" style={{'gridTemplateColumns': `${toolsCloudGridColumns}`}}>\r\n                    {\r\n                        TECHNOLOGY_FIELDS.tools_cloud.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"technologies-grid-item\" data-aos=\"zoom-in\">\r\n                                    <Image className=\"technology-icon\" src={technology.icon} alt={`${technology.name} icon`} />\r\n                                    <p>{technology.name}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    </article>\r\n                    <div className=\"field-info\">\r\n                        <p>\r\n                            <strong>Visual Studio Code</strong> as the main IDE, with experience in <strong>Git</strong> version control system and <strong>Git Flow</strong>. Furthermore,\r\n                            {' '}knowledge in deploying apps with <strong>Docker</strong> and <strong>Heroku</strong>.\r\n                        </p>\r\n                    </div>\r\n                </>\r\n            }\r\n            {value === 3 &&\r\n                <>\r\n                    <article id=\"embedded-systems-content\" className=\"field-content\" style={{'gridTemplateColumns': `${embeddedSystemsGridColumns}`}}>\r\n                    {\r\n                        TECHNOLOGY_FIELDS.embedded_systems.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"technologies-grid-item\" data-aos=\"zoom-in\">\r\n                                    <Image className=\"technology-icon\" src={technology.icon} alt={`${technology.name} icon`} />\r\n                                    <p>{technology.name}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    </article>\r\n                    <div className=\"field-info\">\r\n                        <p>\r\n                            I have built plenty of embedded systems with <strong>Arduino</strong> and <strong>Raspberry Pi</strong>,\r\n                            {' '} with the use of different wireless communication protocols (<strong>Bluetooth</strong>, <strong>LoRa</strong>\r\n                            {' '} and <strong>Zigbee</strong>) and connected to the cloud.\r\n                        </p>\r\n                    </div>\r\n                </> \r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default Skills;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\AboutMe.js",["115","116"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Projects.js",["117","118","119"],"import React, { useEffect } from 'react';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { FETCH_PROJECTS_QUERY } from '../utils/graphql';\r\n\r\n// Import bootstrap components\r\nimport { CardDeck, Container, Row } from 'react-bootstrap';\r\n\r\n// Import react icon\r\nimport { FiChevronRight } from 'react-icons/fi';\r\n\r\n// Import components\r\nimport Sidebar from '../components/common/Navbar';\r\nimport ProjectCard from '../components/projects/ProjectCard';\r\nimport Loader from '../components/common/Loader';\r\n\r\nconst Projects = () => {\r\n    const {\r\n        loading,\r\n        error,\r\n        data\r\n    } = useQuery(FETCH_PROJECTS_QUERY);\r\n\r\n    useEffect(() => {\r\n        Aos.init({duration: 1000});\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n    if (error) {\r\n        return <h1>Error: Something Wrong Happened</h1>;\r\n    }\r\n\r\n    return (\r\n        <div id=\"projects\">\r\n            <h1 data-aos=\"zoom-in\"><span className=\"navigation-color\">{'<'}</span>Projects<span className=\"navigation-color\">{' />'}</span></h1>\r\n            \r\n            <CardDeck data-aos=\"zoom-in\">\r\n                <Row>\r\n                {\r\n                    data.getProjects &&\r\n                    data.getProjects\r\n                        .filter(project => project.id === '5ff8368da728a819889de758')\r\n                        .map(project => <ProjectCard \r\n                                            key={project.id}\r\n                                            title={project.title} \r\n                                            description={project.description}\r\n                                            technologies={project.technologies}\r\n                                            startDate={project.startDate}\r\n                                            endDate={project.endDate}\r\n                                            url={project.url}\r\n                                            image={project.image} \r\n                                        />)\r\n                }\r\n                {\r\n                    data.getProjects\r\n                        .filter(project => project.id === '5ff8381ba728a819889de759')\r\n                        .map(project => <ProjectCard \r\n                                            key={project.id}\r\n                                            title={project.title} \r\n                                            description={project.description}\r\n                                            technologies={project.technologies}\r\n                                            startDate={project.startDate}\r\n                                            endDate={project.endDate}\r\n                                            url={project.url}\r\n                                            image={project.image} \r\n                                        />)\r\n                }\r\n                {\r\n                    data.getProjects\r\n                        .filter(project => project.id === '5ff82c39a728a819889de752')\r\n                        .map(project => <ProjectCard \r\n                                            key={project.id}\r\n                                            title={project.title} \r\n                                            description={project.description}\r\n                                            technologies={project.technologies}\r\n                                            startDate={project.startDate}\r\n                                            endDate={project.endDate}\r\n                                            url={project.url}\r\n                                            image={project.image}\r\n                                        />)\r\n                }\r\n                     \r\n                </Row>\r\n            </CardDeck>\r\n            <Row>\r\n                <Link to={'/projects'} style={{'marginTop': '4rem', 'marginLeft': 'auto', 'marginRight': 'auto'}}>\r\n                    <button className=\"general-button\">Show All</button>\r\n                </Link>\r\n            </Row>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Projects;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Organizations.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\graphql.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\data\\about-me-data.js",[],["120","121"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\common\\Loader.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\all-projects\\AllProjects.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectCard.js",["122"],"import React, { useState, useEffect } from 'react';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n// Import bootstrap components\r\nimport { Button, Card, Col } from 'react-bootstrap';\r\n\r\n// Import components\r\nimport ProjectInfo from './ProjectInfo';\r\n\r\nconst ProjectCard = ({ title, description, technologies, startDate, endDate, url, image, projectPage }) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        Aos.init({duration: 1000});\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <Col xs={12} sm={12} md={6} lg={6} xl={4}>\r\n            <Card className=\"project-card project-card-hover\">\r\n                <Card.Img className=\"img-project\" variant=\"top\" src={image} />\r\n                <Card.Body className=\"project-card-body\">\r\n                    <Card.Title>{title}</Card.Title>\r\n                    <Card.Text style={{'textAlign': 'justify'}}>\r\n                        {description}\r\n                    </Card.Text>\r\n                    <button type=\"button\" className=\"general-button\" style={{'marginTop': 'auto'}} onClick={() => setModalShow(true)}>\r\n                        Show More\r\n                    </button>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n\r\n        <ProjectInfo \r\n          show={modalShow} \r\n          onHide={() => setModalShow(false)} \r\n          title={title} \r\n          description={description} \r\n          technologies={technologies} \r\n          url={url} \r\n          image={image} \r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\Question.js",[],["123","124"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\OrganizationCard.js",["125","126","127","128","129"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\constants\\constants.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\all-projects\\ProjectCard.js",["130"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectInfo.js",["131","132"],"import React from 'react';\r\n\r\nimport { Button, Image, Modal } from 'react-bootstrap';\r\n\r\nimport { getTechnologyIcon } from '../../utils/get-technology-icon';\r\n\r\nconst ProjectInfo = (props) => {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            className=\"project-modal\"\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header className=\"project-modal-header\" closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {props.title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"project-modal-body\">\r\n                <Image className=\"modal-image\" src={props.image} />\r\n                <div className=\"project-modal-content\">\r\n                    <div className=\"project-modal-description\">\r\n                        <p>\r\n                            {props.description}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"project-technologies-grid\">\r\n                        {props.technologies.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"project-grid-item\">\r\n                                    {getTechnologyIcon(technology)}\r\n                                    <div className=\"technology-name\">\r\n                                        {technology}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                \r\n            </Modal.Body>\r\n            {props.url &&\r\n                <Modal.Footer className=\"project-modal-footer\">\r\n                    <a className=\"general-button\" type=\"button\" href={props.url} target=\"_blank\">Go to project</a>\r\n                </Modal.Footer>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ProjectInfo;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\SliderCard.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\get-technology-icon.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\common\\Navbar.js",["133"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Footer.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":12,"column":8,"nodeType":"140","messageId":"141","endLine":12,"endColumn":14},{"ruleId":"138","severity":1,"message":"142","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":13},{"ruleId":"138","severity":1,"message":"143","line":4,"column":15,"nodeType":"140","messageId":"141","endLine":4,"endColumn":24},{"ruleId":"138","severity":1,"message":"144","line":12,"column":12,"nodeType":"140","messageId":"141","endLine":12,"endColumn":24},{"ruleId":"138","severity":1,"message":"145","line":12,"column":26,"nodeType":"140","messageId":"141","endLine":12,"endColumn":41},{"ruleId":"138","severity":1,"message":"146","line":13,"column":12,"nodeType":"140","messageId":"141","endLine":13,"endColumn":24},{"ruleId":"138","severity":1,"message":"147","line":13,"column":26,"nodeType":"140","messageId":"141","endLine":13,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":31,"column":25,"nodeType":"150","endLine":31,"endColumn":133},{"ruleId":"148","severity":1,"message":"149","line":34,"column":25,"nodeType":"150","endLine":34,"endColumn":122},{"ruleId":"138","severity":1,"message":"143","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":19},{"ruleId":"138","severity":1,"message":"151","line":9,"column":8,"nodeType":"140","messageId":"141","endLine":9,"endColumn":15},{"ruleId":"138","severity":1,"message":"152","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"153","line":27,"column":10,"nodeType":"140","messageId":"141","endLine":27,"endColumn":16},{"ruleId":"138","severity":1,"message":"143","line":9,"column":20,"nodeType":"140","messageId":"141","endLine":9,"endColumn":29},{"ruleId":"138","severity":1,"message":"154","line":12,"column":10,"nodeType":"140","messageId":"141","endLine":12,"endColumn":24},{"ruleId":"138","severity":1,"message":"151","line":15,"column":8,"nodeType":"140","messageId":"141","endLine":15,"endColumn":15},{"ruleId":"134","replacedBy":"155"},{"ruleId":"136","replacedBy":"156"},{"ruleId":"138","severity":1,"message":"153","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":16},{"ruleId":"134","replacedBy":"157"},{"ruleId":"136","replacedBy":"158"},{"ruleId":"138","severity":1,"message":"152","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"159","line":11,"column":10,"nodeType":"140","messageId":"141","endLine":11,"endColumn":14},{"ruleId":"138","severity":1,"message":"143","line":11,"column":21,"nodeType":"140","messageId":"141","endLine":11,"endColumn":30},{"ruleId":"138","severity":1,"message":"151","line":14,"column":8,"nodeType":"140","messageId":"141","endLine":14,"endColumn":15},{"ruleId":"138","severity":1,"message":"160","line":31,"column":11,"nodeType":"140","messageId":"141","endLine":31,"endColumn":17},{"ruleId":"138","severity":1,"message":"153","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":16},{"ruleId":"138","severity":1,"message":"153","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":46,"column":82,"nodeType":"163","endLine":46,"endColumn":97},{"ruleId":"138","severity":1,"message":"152","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Skills' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Container' is defined but never used.","'displayEmail' is assigned a value but never used.","'setDisplayEmail' is assigned a value but never used.","'displayPhone' is assigned a value but never used.","'setDisplayPhone' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Sidebar' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'FiChevronRight' is defined but never used.",["164"],["165"],["164"],["165"],"'Card' is defined but never used.","'swiper' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]