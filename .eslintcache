[{"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\index.js":"1","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\App.js":"2","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Navbar.js":"3","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Skills.js":"4","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Home.js":"5","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\AboutMe.js":"6","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Contact.js":"7","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Footer.js":"8","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\ApolloProvider.js":"9","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\Organizations.js":"10","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\SliderCard.js":"11","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\graphql.js":"12","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\OrganizationCard.js":"13","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\Projects.js":"14","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectCard.js":"15","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectInfo.js":"16","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\get-technology-icon.js":"17"},{"size":261,"mtime":1610109813052,"results":"18","hashOfConfig":"19"},{"size":770,"mtime":1610117631052,"results":"20","hashOfConfig":"19"},{"size":646,"mtime":1610109813009,"results":"21","hashOfConfig":"19"},{"size":6241,"mtime":1609958515226,"results":"22","hashOfConfig":"19"},{"size":1814,"mtime":1609958515220,"results":"23","hashOfConfig":"19"},{"size":2470,"mtime":1610117631056,"results":"24","hashOfConfig":"19"},{"size":1395,"mtime":1609958515212,"results":"25","hashOfConfig":"19"},{"size":2003,"mtime":1609958515217,"results":"26","hashOfConfig":"19"},{"size":341,"mtime":1610111067264,"results":"27","hashOfConfig":"19"},{"size":574,"mtime":1610109813014,"results":"28","hashOfConfig":"19"},{"size":755,"mtime":1610109813016,"results":"29","hashOfConfig":"19"},{"size":477,"mtime":1610117631084,"results":"30","hashOfConfig":"19"},{"size":7903,"mtime":1610109813012,"results":"31","hashOfConfig":"19"},{"size":2962,"mtime":1610121862558,"results":"32","hashOfConfig":"19"},{"size":1143,"mtime":1610181882296,"results":"33","hashOfConfig":"19"},{"size":2010,"mtime":1610182126170,"results":"34","hashOfConfig":"19"},{"size":2437,"mtime":1610132528750,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"insojy",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\index.js",[],["77","78"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\App.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Navbar.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Skills.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Home.js",["79","80","81","82","83","84","85","86","87","88","89","90","91"],"import React from 'react'\r\n\r\nimport profilePhoto from '../images/FotoPabloMedina.png';\r\n\r\nimport { Button, Card, CardDeck, Col, Container, Form, Image, Row  } from 'react-bootstrap';\r\nimport { HiOutlineMail } from 'react-icons/hi';\r\n\r\n\r\nimport { FaLinkedin, FaGithub, FaReact, FaBootstrap, FaNodeJs } from 'react-icons/fa';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Row id=\"home\">\r\n            <Col md={12}>\r\n                <Row>\r\n                    <Col className=\"m-auto text-center\" lg={4} md={6}>\r\n                        <Image id=\"profile-image\" src={profilePhoto} alt=\"Photo of Pablo\" roundedCircle />\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"text-center\">\r\n                    <h1 className=\"display-4 text-center\">Pablo Medina</h1>\r\n                    <p className=\"lead text-center\">Full Stack Developer (React and Node)</p>\r\n                    <p>\r\n                        <a href=\"https://www.linkedin.com/in/pablo-medina-rodr%C3%ADguez-a3a8b9135/\" alt=\"linkedin profile\" target=\"_blank\" className=\"btn\">\r\n                            <FaLinkedin className=\"social-network-icon\" />\r\n                        </a>\r\n                        <a className=\"social-network-icon\" href=\"https://github.com/PMedina25\" alt=\"github profile\" target=\"_blank\" className=\"btn\">\r\n                            <FaGithub className=\"social-network-icon\" />\r\n                        </a>\r\n                        <a className=\"social-network-icon\" href=\"mailto:pablo.medina.us@gmail.com\" alt=\"email account\" target=\"_blank\" className=\"btn\">\r\n                            <HiOutlineMail className=\"social-network-icon\" />\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\AboutMe.js",["92"],"import React from 'react'\r\n\r\nimport { Col, Image, Row  } from 'react-bootstrap';\r\n\r\n\r\nfunction AboutMe() {\r\n    return (\r\n        <Row id=\"about-me\" className=\"card card-body bg-light\">\r\n            <Col md={6} id=\"about-me-info\">\r\n               <h1>About Me</h1>\r\n               <p>Computer engineer, full stack developer  and tech enthusiast.</p>\r\n               <p>With experience in teamwork, always willing to learn new things and delighted at facing new challenges.</p>\r\n               <p>Looking for a MERN Stack junior developer job, especially if it involves Machine Learning.</p>\r\n             </Col>\r\n             <Col md={6} id=\"about-me-grid\">\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                    <div className=\"about-me-grid-item\">\r\n                    </div>\r\n                </Col>\r\n        </Row>\r\n            \r\n    )\r\n}\r\n\r\nexport default AboutMe;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Contact.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Footer.js",["93","94","95","96","97","98","99","100","101","102"],"import React from 'react';\r\n\r\nimport { Button, Card, CardDeck, Col, Container, Form, Image, Row  } from 'react-bootstrap';\r\n\r\nimport { FaLinkedin, FaGithub, FaReact, FaBootstrap, FaNodeJs } from 'react-icons/fa';\r\nimport { HiOutlineMail } from 'react-icons/hi';\r\nimport { SiApollographql, SiGraphql, SiMongodb } from 'react-icons/si';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <Container fluid>\r\n              <Row>\r\n                <Col id=\"social-networks\" md={6}>\r\n                  <a href=\"https://www.linkedin.com/in/pablo-medina-rodr%C3%ADguez-a3a8b9135/\" alt=\"linkedin profile\" target=\"_blank\" className=\"btn\">\r\n                    <FaLinkedin className=\"social-network-icon\" />\r\n                  </a>\r\n                  <a className=\"social-network-icon\" href=\"https://github.com/PMedina25\" alt=\"github profile\" target=\"_blank\" className=\"btn\">\r\n                    <FaGithub className=\"social-network-icon\" />\r\n                  </a>\r\n                  <a className=\"social-network-icon\" href=\"mailto:pablo.medina.us@gmail.com\" alt=\"email account\" target=\"_blank\" className=\"btn\">\r\n                    <HiOutlineMail className=\"social-network-icon\" />\r\n                  </a>\r\n                </Col>\r\n                <Col id=\"technologies\" md={6}>\r\n                  <span>Developed with:</span>\r\n                  <FaReact size={32} style={{'paddingLeft': '12', 'color': 'white'}} />\r\n                  <FaBootstrap size={32} style={{'paddingLeft': '12', 'color': 'white'}} />\r\n                  <FaNodeJs size={32} style={{'paddingLeft': '12', 'color': 'white'}} />\r\n                  <SiMongodb size={32} style={{'paddingLeft': '12', 'color': 'white'}} />\r\n                  <SiApollographql size={32} style={{'paddingLeft': '12', 'color': 'white'}} />\r\n                  <SiGraphql size={32} style={{'paddingLeft': '12', 'color': 'white'}} />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </footer>\r\n    )\r\n}\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\ApolloProvider.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\Organizations.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\SliderCard.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\graphql.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\OrganizationCard.js",["103","104","105"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\n\r\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\r\n\r\nimport SliderCard from './SliderCard';\r\n\r\nconst OrganizationCard = ({ data }) => {\r\n    const eduOrgs = data.getOrganizations.filter(organization => organization.type === 'education');\r\n    const expOrgs = data.getOrganizations.filter(organization => organization.type === 'experience');\r\n    const certOrgs = data.getOrganizations.filter(organization => organization.type === 'certification');\r\n\r\n    const [eduOrganizations, setEduOrganizations] = useState(eduOrgs);\r\n    const [expOrganizations, setExpOrganizations] = useState(expOrgs);\r\n    const [certOrganizations, setCertOrganizations] = useState(certOrgs);\r\n    const [eduIndex, setEduIndex] = useState(0);\r\n    const [expIndex, setExpIndex] = useState(0);\r\n    const [certIndex, setCertIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n      const lastEduIndex = eduOrganizations.length - 1;\r\n\r\n      if (eduIndex < 0) {\r\n        setEduIndex(lastEduIndex);\r\n      }\r\n      if (eduIndex > lastEduIndex) {\r\n        setEduIndex(0);\r\n      }\r\n    }, [eduIndex, eduOrganizations]);\r\n\r\n    useEffect(() => {\r\n        const lastExpIndex = expOrganizations.length - 1;\r\n\r\n        if (expIndex < 0) {\r\n            setExpIndex(lastExpIndex);\r\n          }\r\n        if (expIndex > lastExpIndex) {\r\n            setExpIndex(0);\r\n        }\r\n    }, [expIndex, expOrganizations]);\r\n\r\n    useEffect(() => {\r\n        const lastCertIndex = certOrganizations.length - 1;\r\n\r\n        if (certIndex < 0) {\r\n            setCertIndex(lastCertIndex);\r\n          }\r\n        if (certIndex > lastCertIndex) {\r\n            setCertIndex(0);\r\n        }\r\n    }, [certIndex, certOrganizations])\r\n\r\n    useEffect(() => {\r\n      let eduSlider = setInterval(() => {\r\n        setEduIndex(eduIndex + 1);\r\n      }, 5000);\r\n      return () => clearInterval(eduSlider);\r\n    }, [eduIndex]);\r\n\r\n    useEffect(() => {\r\n      let expSlider = setInterval(() => {\r\n        setExpIndex(expIndex + 1);\r\n      }, 5000);\r\n      return () => clearInterval(expSlider);\r\n    }, [expIndex]);\r\n\r\n    useEffect(() => {\r\n      let certSlider = setInterval(() => {\r\n        setCertIndex(certIndex + 1);\r\n      }, 5000);\r\n      return () => clearInterval(certSlider);\r\n    }, [certIndex]);\r\n\r\n    return (\r\n        <Container id=\"organizations\" className=\"bg-light\" fluid>\r\n            <Row>\r\n              <Col className=\"card-column\" md={4}>\r\n                <h1>Education</h1>\r\n                <div className=\"cards-container\">\r\n                    {eduOrganizations &&\r\n                    eduOrganizations\r\n                    .map((organization, organizationIndex) => {\r\n                        \r\n                        let position = 'nextSlide';\r\n                        if (organizationIndex === eduIndex) {\r\n                        position = 'activeSlide';\r\n                        }\r\n                        if (organizationIndex === eduIndex - 1 || (eduIndex === 0 && organizationIndex === eduOrganizations.length - 1)) {\r\n                        position = 'lastSlide';\r\n                        }\r\n\r\n                        return (\r\n                            <Card className={\"m-auto slider-card \" + position}>\r\n                                <FiChevronLeft className=\"left-arrow-slider\" onClick={() => setEduIndex(eduIndex - 1)} />\r\n                                <SliderCard\r\n                                    key={organization.id} \r\n                                    name={organization.name} \r\n                                    description={organization.description} \r\n                                    startDate={organization.startDate} \r\n                                    endDate={organization.endDate} \r\n                                    url={organization.url} \r\n                                    logo={organization.image} />\r\n                                <FiChevronRight className=\"right-arrow-slider\" onClick={() => setEduIndex(eduIndex + 1)} />\r\n                            </Card>\r\n                        );\r\n                    })\r\n                    }\r\n                </div>\r\n              </Col>\r\n              <Col className=\"card-column\" md={4}>\r\n                <h1>Experience</h1>\r\n                <div className=\"cards-container\">\r\n                    {expOrganizations &&\r\n                    expOrganizations\r\n                    .map((organization, organizationIndex) => {\r\n                        \r\n                        let position = 'nextSlide';\r\n                        if (organizationIndex === expIndex) {\r\n                        position = 'activeSlide';\r\n                        }\r\n                        \r\n                        if (organizationIndex === expIndex - 1 || (expIndex === 0 && organizationIndex === expOrganizations.length - 1)) {\r\n                        position = 'lastSlide';\r\n                        }\r\n                        \r\n\r\n                        return (\r\n                            <Card className={\"m-auto slider-card \" + position}>\r\n                                <FiChevronLeft className=\"left-arrow-slider\" onClick={() => setExpIndex(expIndex - 1)} />\r\n                                <SliderCard\r\n                                    key={organization.id} \r\n                                    name={organization.name} \r\n                                    description={organization.description} \r\n                                    startDate={organization.startDate} \r\n                                    endDate={organization.endDate} \r\n                                    url={organization.url} \r\n                                    logo={organization.image} />\r\n                                <FiChevronRight className=\"right-arrow-slider\" onClick={() => setExpIndex(expIndex + 1)} />\r\n                            </Card>\r\n                        );\r\n                    })\r\n                    }\r\n                </div>\r\n              </Col>\r\n              <Col className=\"card-column\" md={4}>\r\n                <h1>Certifications</h1>\r\n                <div className=\"cards-container\">\r\n                    {certOrganizations &&\r\n                    certOrganizations\r\n                    .map((organization, organizationIndex) => {\r\n                        \r\n                        let position = 'nextSlide';\r\n                        if (organizationIndex === certIndex) {\r\n                        position = 'activeSlide';\r\n                        }\r\n                        if (organizationIndex === certIndex - 1 || (certIndex === 0 && organizationIndex === certOrganizations.length - 1)) {\r\n                        position = 'lastSlide';\r\n                        }\r\n\r\n                        return (\r\n                            <Card className={\"m-auto slider-card \" + position}>\r\n                                <FiChevronLeft className=\"left-arrow-slider\" onClick={() => setCertIndex(certIndex - 1)} />\r\n                                <SliderCard\r\n                                    key={organization.id} \r\n                                    name={organization.name} \r\n                                    description={organization.description} \r\n                                    startDate={organization.startDate} \r\n                                    endDate={organization.endDate} \r\n                                    url={organization.url} \r\n                                    logo={organization.image} />\r\n                                <FiChevronRight className=\"right-arrow-slider\" onClick={() => setCertIndex(certIndex + 1)} />\r\n                            </Card>\r\n                        );\r\n                    })\r\n                    }\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n    )\r\n}\r\n\r\nexport default OrganizationCard;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\Projects.js",["106"],"import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { FETCH_PROJECTS_QUERY } from '../../utils/graphql';\r\n\r\nimport { Button, Card, CardDeck, Container } from 'react-bootstrap';\r\n\r\nimport { FiChevronRight } from 'react-icons/fi';\r\n\r\nimport ProjectCard from './ProjectCard';\r\n\r\nfunction Projects() {\r\n    const {\r\n        loading,\r\n        error,\r\n        data\r\n    } = useQuery(FETCH_PROJECTS_QUERY);\r\n\r\n    // TODO: Add Spinner\r\n    if (loading) {\r\n        return <p>Loading...</p>;\r\n      }\r\n    if (error) {\r\n    return <p>Error:(</p>;\r\n    }\r\n\r\n    return (\r\n        <Container id=\"projects\" fluid>\r\n            <h1 style={{'textAlign': 'center'}}>Projects</h1>\r\n            <CardDeck>\r\n                {\r\n                    data.getProjects &&\r\n                    data.getProjects\r\n                        .filter(project => project.id === '5ff8368da728a819889de758')\r\n                        .map(project => <ProjectCard \r\n                                            key={project.id}\r\n                                            title={project.title} \r\n                                            description={project.description}\r\n                                            technologies={project.technologies}\r\n                                            url={project.url}\r\n                                            image={project.image} />)\r\n                }\r\n                {\r\n                    data.getProjects\r\n                        .filter(project => project.id === '5ff8381ba728a819889de759')\r\n                        .map(project => <ProjectCard \r\n                                            key={project.id}\r\n                                            title={project.title} \r\n                                            description={project.description}\r\n                                            technologies={project.technologies}\r\n                                            url={project.url}\r\n                                            image={project.image} />)\r\n                }\r\n                {\r\n                    data.getProjects\r\n                        .filter(project => project.id === '5ff82c39a728a819889de752')\r\n                        .map(project => <ProjectCard \r\n                                            key={project.id}\r\n                                            title={project.title} \r\n                                            description={project.description}\r\n                                            technologies={project.technologies}\r\n                                            url={project.url}\r\n                                            image={project.image} />)\r\n                }\r\n            </CardDeck>\r\n            <Button id=\"btn-show-all\" className=\"btn-project\">\r\n                Show all\r\n                <FiChevronRight id=\"show-all-arrow\" size={32} fontWeight={700}/>\r\n            </Button>\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Projects;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectCard.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectInfo.js",["107"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\get-technology-icon.js",["108"],"import { \r\n    FaBootstrap,\r\n    FaCloud,\r\n    FaDocker, \r\n    FaJava,\r\n    FaNodeJs, \r\n    FaPython,\r\n    FaRaspberryPi, \r\n    FaReact,\r\n    FaWifi\r\n} from 'react-icons/fa';\r\n\r\nimport { \r\n    SiApollographql,\r\n    SiArduino, \r\n    SiCplusplus,\r\n    SiFirebase, \r\n    SiGooglemaps,\r\n    SiGraphql, \r\n    SiHeroku,\r\n    SiJavascript, \r\n    SiKeras,\r\n    SiKubernetes, \r\n    SiMariadb,\r\n    SiMongodb,\r\n    SiMysql,\r\n    SiNetlify,\r\n    SiRedux,\r\n    SiTensorflow,\r\n    SiZigbee\r\n} from 'react-icons/si';\r\n\r\nimport { \r\n    DiAndroid \r\n} from 'react-icons/di';\r\n\r\nimport {\r\n    AiFillLayout\r\n} from 'react-icons/ai';\r\n\r\nexport const getTechnologyIcon = (technology) => {\r\n    switch(technology) {\r\n        case 'Bootstrap':\r\n            return <FaBootstrap />;\r\n        case 'Cloud':\r\n            return <FaCloud />;\r\n        case 'Docker':\r\n            return <FaDocker />;\r\n        case 'Java':\r\n            return <FaJava />;\r\n        case 'Node':\r\n        case 'Express':\r\n            return <FaNodeJs />;\r\n        case 'Python':\r\n            return <FaPython />;\r\n        case 'Raspberry Pi':\r\n            return <FaRaspberryPi />;\r\n        case 'React':\r\n            return <FaReact />;\r\n        case 'LoRa':\r\n        case 'MQTT':\r\n            return <FaWifi />;\r\n        case 'Apollo Server':\r\n            return <SiApollographql />;\r\n        case 'Arduino':\r\n            return <SiArduino />;\r\n        case 'C++':\r\n            return <SiCplusplus />;\r\n        case 'Firebase':\r\n            return <SiFirebase />;\r\n        case 'Google Maps API':\r\n            return <SiGooglemaps />;\r\n        case 'GraphQL':\r\n            return <SiGraphql />;\r\n        case 'Heroku':\r\n            return <SiHeroku />;\r\n        case 'JavaScript':\r\n            return <SiJavascript />;\r\n        case 'Keras':\r\n            return <SiKeras />;\r\n        case 'Kubernetes':\r\n            return <SiKubernetes />;\r\n        case 'MariaDB':\r\n            return <SiMariadb />;\r\n        case 'MongoDB':\r\n            return <SiMongodb />;\r\n        case 'MySQL':\r\n            return <SiMysql />;\r\n        case 'Netlify':\r\n            return <SiNetlify />;\r\n        case 'Redux':\r\n            return <SiRedux />;\r\n        case 'TensorFlow':\r\n            return <SiTensorflow />;\r\n        case 'Zigbee':\r\n            return <SiZigbee />;\r\n        case 'Semantic UI':\r\n            return <AiFillLayout />\r\n        default:\r\n            return <div></div>;\r\n    }\r\n}",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":16},{"ruleId":"113","severity":1,"message":"117","line":5,"column":18,"nodeType":"115","messageId":"116","endLine":5,"endColumn":22},{"ruleId":"113","severity":1,"message":"118","line":5,"column":24,"nodeType":"115","messageId":"116","endLine":5,"endColumn":32},{"ruleId":"113","severity":1,"message":"119","line":5,"column":39,"nodeType":"115","messageId":"116","endLine":5,"endColumn":48},{"ruleId":"113","severity":1,"message":"120","line":5,"column":50,"nodeType":"115","messageId":"116","endLine":5,"endColumn":54},{"ruleId":"113","severity":1,"message":"121","line":9,"column":32,"nodeType":"115","messageId":"116","endLine":9,"endColumn":39},{"ruleId":"113","severity":1,"message":"122","line":9,"column":41,"nodeType":"115","messageId":"116","endLine":9,"endColumn":52},{"ruleId":"113","severity":1,"message":"123","line":9,"column":54,"nodeType":"115","messageId":"116","endLine":9,"endColumn":62},{"ruleId":"124","severity":1,"message":"125","line":24,"column":125,"nodeType":"126","endLine":24,"endColumn":140},{"ruleId":"124","severity":1,"message":"125","line":27,"column":117,"nodeType":"126","endLine":27,"endColumn":132},{"ruleId":"127","severity":1,"message":"128","line":27,"column":133,"nodeType":"126","endLine":27,"endColumn":148},{"ruleId":"124","severity":1,"message":"125","line":30,"column":120,"nodeType":"126","endLine":30,"endColumn":135},{"ruleId":"127","severity":1,"message":"128","line":30,"column":136,"nodeType":"126","endLine":30,"endColumn":151},{"ruleId":"113","severity":1,"message":"129","line":3,"column":15,"nodeType":"115","messageId":"116","endLine":3,"endColumn":20},{"ruleId":"113","severity":1,"message":"114","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":16},{"ruleId":"113","severity":1,"message":"117","line":3,"column":18,"nodeType":"115","messageId":"116","endLine":3,"endColumn":22},{"ruleId":"113","severity":1,"message":"118","line":3,"column":24,"nodeType":"115","messageId":"116","endLine":3,"endColumn":32},{"ruleId":"113","severity":1,"message":"120","line":3,"column":50,"nodeType":"115","messageId":"116","endLine":3,"endColumn":54},{"ruleId":"113","severity":1,"message":"129","line":3,"column":56,"nodeType":"115","messageId":"116","endLine":3,"endColumn":61},{"ruleId":"124","severity":1,"message":"125","line":15,"column":119,"nodeType":"126","endLine":15,"endColumn":134},{"ruleId":"124","severity":1,"message":"125","line":18,"column":111,"nodeType":"126","endLine":18,"endColumn":126},{"ruleId":"127","severity":1,"message":"128","line":18,"column":127,"nodeType":"126","endLine":18,"endColumn":142},{"ruleId":"124","severity":1,"message":"125","line":21,"column":114,"nodeType":"126","endLine":21,"endColumn":129},{"ruleId":"127","severity":1,"message":"128","line":21,"column":130,"nodeType":"126","endLine":21,"endColumn":145},{"ruleId":"113","severity":1,"message":"130","line":13,"column":30,"nodeType":"115","messageId":"116","endLine":13,"endColumn":49},{"ruleId":"113","severity":1,"message":"131","line":14,"column":30,"nodeType":"115","messageId":"116","endLine":14,"endColumn":49},{"ruleId":"113","severity":1,"message":"132","line":15,"column":31,"nodeType":"115","messageId":"116","endLine":15,"endColumn":51},{"ruleId":"113","severity":1,"message":"117","line":5,"column":18,"nodeType":"115","messageId":"116","endLine":5,"endColumn":22},{"ruleId":"113","severity":1,"message":"133","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":15},{"ruleId":"113","severity":1,"message":"134","line":34,"column":5,"nodeType":"115","messageId":"116","endLine":34,"endColumn":14},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardDeck' is defined but never used.","'Container' is defined but never used.","'Form' is defined but never used.","'FaReact' is defined but never used.","'FaBootstrap' is defined but never used.","'FaNodeJs' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react/jsx-no-duplicate-props","No duplicate props allowed","'Image' is defined but never used.","'setEduOrganizations' is assigned a value but never used.","'setExpOrganizations' is assigned a value but never used.","'setCertOrganizations' is assigned a value but never used.","'DiVim' is defined but never used.","'DiAndroid' is defined but never used.","no-global-assign","no-unsafe-negation"]