[{"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\index.js":"1","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\ApolloProvider.js":"2","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\App.js":"3","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\AllProjects.js":"4","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Skills.js":"5","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Projects.js":"6","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Organizations.js":"7","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\graphql.js":"8","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\data\\about-me-data.js":"9","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\common\\Loader.js":"10","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\all-projects\\AllProjects.js":"11","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectCard.js":"12","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\OrganizationCard.js":"13","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\constants\\constants.js":"14","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\all-projects\\ProjectCard.js":"15","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectInfo.js":"16","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\SliderCard.js":"17","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\get-technology-icon.js":"18","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\common\\Navbar.js":"19","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Footer.js":"20","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\AboutMe.js":"21","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\Map.js":"22","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Home.js":"23","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\Technologies.js":"24"},{"size":261,"mtime":1610707778683,"results":"25","hashOfConfig":"26"},{"size":369,"mtime":1613234341728,"results":"27","hashOfConfig":"26"},{"size":1032,"mtime":1613754539797,"results":"28","hashOfConfig":"26"},{"size":860,"mtime":1613248363910,"results":"29","hashOfConfig":"26"},{"size":8617,"mtime":1613644150962,"results":"30","hashOfConfig":"26"},{"size":4122,"mtime":1613672896003,"results":"31","hashOfConfig":"26"},{"size":666,"mtime":1613248363911,"results":"32","hashOfConfig":"26"},{"size":477,"mtime":1610707778704,"results":"33","hashOfConfig":"26"},{"size":884,"mtime":1610969272671,"results":"34","hashOfConfig":"26"},{"size":516,"mtime":1613644150938,"results":"35","hashOfConfig":"26"},{"size":5019,"mtime":1613644150933,"results":"36","hashOfConfig":"26"},{"size":1567,"mtime":1613644150944,"results":"37","hashOfConfig":"26"},{"size":5476,"mtime":1613762566414,"results":"38","hashOfConfig":"26"},{"size":5242,"mtime":1613753847823,"results":"39","hashOfConfig":"26"},{"size":1432,"mtime":1613644150936,"results":"40","hashOfConfig":"26"},{"size":2032,"mtime":1613644150946,"results":"41","hashOfConfig":"26"},{"size":624,"mtime":1613406218450,"results":"42","hashOfConfig":"26"},{"size":4204,"mtime":1613644150964,"results":"43","hashOfConfig":"26"},{"size":1334,"mtime":1613754451802,"results":"44","hashOfConfig":"26"},{"size":290,"mtime":1613644150955,"results":"45","hashOfConfig":"26"},{"size":4771,"mtime":1613762946317,"results":"46","hashOfConfig":"26"},{"size":2966,"mtime":1613754373168,"results":"47","hashOfConfig":"26"},{"size":2077,"mtime":1613754519851,"results":"48","hashOfConfig":"26"},{"size":7143,"mtime":1613761121546,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"insojy",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\index.js",[],["104","105"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\ApolloProvider.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\App.js",["106"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\AllProjects.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Skills.js",["107","108"],"import React, { useEffect, useState } from 'react';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n// Import bootstrap components\r\nimport { Container, Image } from 'react-bootstrap';\r\n\r\n// Import components\r\nimport Sidebar from '../components/common/Navbar';\r\n\r\n// Import skills constants\r\nimport { KNOWLEDGE_FIELDS, TECHNOLOGY_FIELDS } from '../constants/constants';\r\n\r\nconst Skills = () => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    useEffect(() => {\r\n        Aos.init({duration: 1000});\r\n    }, []);\r\n\r\n    let frontendGridColumns, backendGridColumns, toolsCloudGridColumns, embeddedSystemsGridColumns;\r\n\r\n    if (TECHNOLOGY_FIELDS.frontend.length % 5 === 0) {\r\n        frontendGridColumns = '1fr 1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.frontend.length % 4 === 0) {\r\n        frontendGridColumns = '1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.frontend.length % 3 === 0){\r\n        frontendGridColumns = '1fr 1fr 1fr';\r\n    } else {\r\n        frontendGridColumns = '1fr 1fr';\r\n    }\r\n\r\n    if (TECHNOLOGY_FIELDS.backend.length % 5 === 0) {\r\n        backendGridColumns = '1fr 1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.backend.length % 4 === 0) {\r\n        backendGridColumns = '1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.backend.length % 3 === 0){\r\n        backendGridColumns = '1fr 1fr 1fr';\r\n    } else {\r\n        backendGridColumns = '1fr 1fr';\r\n    }\r\n\r\n    if (TECHNOLOGY_FIELDS.tools_cloud.length % 5 === 0) {\r\n        toolsCloudGridColumns = '1fr 1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.tools_cloud.length % 4 === 0) {\r\n        toolsCloudGridColumns = '1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.tools_cloud.length % 3 === 0){\r\n        toolsCloudGridColumns = '1fr 1fr 1fr';\r\n    } else {\r\n        toolsCloudGridColumns = '1fr 1fr';\r\n    }\r\n\r\n    if (TECHNOLOGY_FIELDS.embedded_systems.length % 5 === 0) {\r\n        embeddedSystemsGridColumns = '1fr 1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.embedded_systems.length % 4 === 0) {\r\n        embeddedSystemsGridColumns = '1fr 1fr 1fr 1fr';\r\n    } else if (TECHNOLOGY_FIELDS.embedded_systems.length % 3 === 0){\r\n        embeddedSystemsGridColumns = '1fr 1fr 1fr';\r\n    } else {\r\n        embeddedSystemsGridColumns = '1fr 1fr';\r\n    }\r\n\r\n    return (\r\n        <div id=\"skills\">\r\n            <h1><span className=\"navigation-color\">{'<'}</span>Skills{'  '}<span className=\"navigation-color\">{'/>'}</span></h1>\r\n\r\n            <div className=\"btn-container\">\r\n                {\r\n                    KNOWLEDGE_FIELDS.map((field, index) => {\r\n                        return (\r\n                            <button \r\n                                key={field} \r\n                                onClick={() => setValue(index)} \r\n                                className={`field-btn ${value === index && 'active-btn'}`\r\n                            }>\r\n                                {field}\r\n                            </button>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {value === 0 &&\r\n                <>\r\n                    <article id=\"frontend-content\" className=\"field-content\" style={{'gridTemplateColumns': `${frontendGridColumns}`}}>\r\n                    {\r\n                        TECHNOLOGY_FIELDS.frontend.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"technologies-grid-item\" data-aos=\"zoom-in\">\r\n                                    <Image className=\"technology-icon\" src={technology.icon} alt={`${technology.name} icon`} />\r\n                                    <p>{technology.name}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    </article>\r\n                    <div className=\"field-info\">\r\n                        <p>\r\n                            In regards to the frontend, this involves skilled in <strong>HTML</strong>, <strong>CSS</strong>, <strong>JavaScript</strong> and  \r\n                            {' '}<strong>JSX</strong>, besides CSS frameworks such as <strong>Bootstrap</strong> and <strong>Semantic UI</strong>. For managing react states, I have developed some applications \r\n                            with <strong>React Hooks</strong>, <strong>Context API</strong> and <strong>Redux</strong>.\r\n                        </p>\r\n                    </div>\r\n                </>\r\n            }\r\n            {value === 1 &&\r\n                <>\r\n                    <article id=\"backend-content\" className=\"field-content\" style={{'gridTemplateColumns': `${backendGridColumns}`}}>\r\n                    {\r\n                        TECHNOLOGY_FIELDS.backend.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"technologies-grid-item\" data-aos=\"zoom-in\">\r\n                                    <Image className=\"technology-icon\" src={technology.icon} alt={`${technology.name} icon`} />\r\n                                    <p>{technology.name}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    </article>\r\n                    <div className=\"field-info\">\r\n                        <p>\r\n                            <strong>Node</strong> and <strong>Express</strong> as the mainstay, as well as <strong>MongoDB</strong> as the primary database system. Moreover, I have developed\r\n                            {' '}some applications using <strong>GraphQL</strong> and <strong>Apollo Server</strong> for the backend.\r\n                        </p>\r\n                        <p>\r\n                            For mobile app development, I have used <strong>Firebase</strong> and <strong>SQLite</strong>.\r\n                        </p>\r\n                    </div>\r\n                </>\r\n            }\r\n            {value === 2 &&\r\n                <>\r\n                    <article id=\"tools-content\" className=\"field-content\" style={{'gridTemplateColumns': `${toolsCloudGridColumns}`}}>\r\n                    {\r\n                        TECHNOLOGY_FIELDS.tools_cloud.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"technologies-grid-item\" data-aos=\"zoom-in\">\r\n                                    <Image className=\"technology-icon\" src={technology.icon} alt={`${technology.name} icon`} />\r\n                                    <p>{technology.name}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    </article>\r\n                    <div className=\"field-info\">\r\n                        <p>\r\n                            <strong>Visual Studio Code</strong> as the main IDE, with experience in <strong>Git</strong> version control system and <strong>Git Flow</strong>. Furthermore,\r\n                            {' '}knowledge in deploying apps with <strong>Docker</strong> and <strong>Heroku</strong>.\r\n                        </p>\r\n                    </div>\r\n                </>\r\n            }\r\n            {value === 3 &&\r\n                <>\r\n                    <article id=\"embedded-systems-content\" className=\"field-content\" style={{'gridTemplateColumns': `${embeddedSystemsGridColumns}`}}>\r\n                    {\r\n                        TECHNOLOGY_FIELDS.embedded_systems.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"technologies-grid-item\" data-aos=\"zoom-in\">\r\n                                    <Image className=\"technology-icon\" src={technology.icon} alt={`${technology.name} icon`} />\r\n                                    <p>{technology.name}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    </article>\r\n                    <div className=\"field-info\">\r\n                        <p>\r\n                            I have built plenty of embedded systems with <strong>Arduino</strong> and <strong>Raspberry Pi</strong>,\r\n                            {' '} with the use of different wireless communication protocols (<strong>Bluetooth</strong>, <strong>LoRa</strong>\r\n                            {' '} and <strong>Zigbee</strong>) and connected to the cloud.\r\n                        </p>\r\n                    </div>\r\n                </> \r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default Skills;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Projects.js",["109","110","111"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Organizations.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\graphql.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\data\\about-me-data.js",[],["112","113"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\common\\Loader.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\all-projects\\AllProjects.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectCard.js",["114"],"import React, { useState, useEffect } from 'react';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n// Import bootstrap components\r\nimport { Button, Card, Col } from 'react-bootstrap';\r\n\r\n// Import components\r\nimport ProjectInfo from './ProjectInfo';\r\n\r\nconst ProjectCard = ({ title, description, technologies, startDate, endDate, url, image, projectPage }) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        Aos.init({duration: 1000});\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <Col xs={12} sm={12} md={6} lg={6} xl={4}>\r\n            <Card className=\"project-card project-card-hover\">\r\n                <Card.Img className=\"img-project\" variant=\"top\" src={image} />\r\n                <Card.Body className=\"project-card-body\">\r\n                    <Card.Title>{title}</Card.Title>\r\n                    <Card.Text style={{'textAlign': 'justify'}}>\r\n                        {description}\r\n                    </Card.Text>\r\n                    <button type=\"button\" className=\"general-button\" style={{'marginTop': 'auto'}} onClick={() => setModalShow(true)}>\r\n                        Show More\r\n                    </button>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n\r\n        <ProjectInfo \r\n          show={modalShow} \r\n          onHide={() => setModalShow(false)} \r\n          title={title} \r\n          description={description} \r\n          technologies={technologies} \r\n          url={url} \r\n          image={image} \r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\OrganizationCard.js",["115","116","117","118","119"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\constants\\constants.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\all-projects\\ProjectCard.js",["120"],"import React, { useState, useEffect } from 'react';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n// Import bootstrap components\r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\n// Import components\r\nimport ProjectInfo from '../projects/ProjectInfo';\r\n\r\nconst ProjectCard = ({ title, description, technologies, startDate, endDate, url, image, projectPage }) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        Aos.init({duration: 1000});\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <Card className=\"all-projects-card\" data-aos=\"fade-up\">\r\n            <Card.Img className=\"img-project\" variant=\"top\" src={image} />\r\n            <Card.Body className=\"project-card-body\">\r\n                <Card.Title>{title}</Card.Title>\r\n                <Card.Text  style={{'textAlign': 'justify'}}>\r\n                    {description}\r\n                </Card.Text>\r\n                <button type=\"button\" className=\"general-button\" onClick={() => setModalShow(true)}>\r\n                    Show More\r\n                </button>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n        <ProjectInfo \r\n          show={modalShow} \r\n          onHide={() => setModalShow(false)} \r\n          title={title} \r\n          description={description} \r\n          technologies={technologies} \r\n          url={url} \r\n          image={image} \r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectInfo.js",["121","122"],"import React from 'react';\r\n\r\nimport { Button, Image, Modal } from 'react-bootstrap';\r\n\r\nimport { getTechnologyIcon } from '../../utils/get-technology-icon';\r\n\r\nconst ProjectInfo = (props) => {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            className=\"project-modal\"\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header className=\"project-modal-header\" closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {props.title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"project-modal-body\">\r\n                <Image className=\"modal-image\" src={props.image} />\r\n                <div className=\"project-modal-content\">\r\n                    <div className=\"project-modal-description\">\r\n                        <p>\r\n                            {props.description}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"project-technologies-grid\">\r\n                        {props.technologies.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"project-grid-item\">\r\n                                    {getTechnologyIcon(technology)}\r\n                                    <div className=\"technology-name\">\r\n                                        {technology}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                \r\n            </Modal.Body>\r\n            {props.url &&\r\n                <Modal.Footer className=\"project-modal-footer\">\r\n                    <a className=\"general-button\" type=\"button\" href={props.url} target=\"_blank\">Go to project</a>\r\n                </Modal.Footer>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ProjectInfo;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\SliderCard.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\get-technology-icon.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\common\\Navbar.js",["123"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Footer.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\AboutMe.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\Map.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Home.js",["124","125","126","127","128","129","130","131"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\about-me\\Technologies.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":12,"column":8,"nodeType":"138","messageId":"139","endLine":12,"endColumn":14},{"ruleId":"136","severity":1,"message":"140","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":19},{"ruleId":"136","severity":1,"message":"141","line":9,"column":8,"nodeType":"138","messageId":"139","endLine":9,"endColumn":15},{"ruleId":"136","severity":1,"message":"140","line":9,"column":20,"nodeType":"138","messageId":"139","endLine":9,"endColumn":29},{"ruleId":"136","severity":1,"message":"142","line":12,"column":10,"nodeType":"138","messageId":"139","endLine":12,"endColumn":24},{"ruleId":"136","severity":1,"message":"141","line":15,"column":8,"nodeType":"138","messageId":"139","endLine":15,"endColumn":15},{"ruleId":"132","replacedBy":"143"},{"ruleId":"134","replacedBy":"144"},{"ruleId":"136","severity":1,"message":"145","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":16},{"ruleId":"136","severity":1,"message":"146","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"147","line":11,"column":10,"nodeType":"138","messageId":"139","endLine":11,"endColumn":14},{"ruleId":"136","severity":1,"message":"140","line":11,"column":21,"nodeType":"138","messageId":"139","endLine":11,"endColumn":30},{"ruleId":"136","severity":1,"message":"141","line":14,"column":8,"nodeType":"138","messageId":"139","endLine":14,"endColumn":15},{"ruleId":"136","severity":1,"message":"148","line":31,"column":11,"nodeType":"138","messageId":"139","endLine":31,"endColumn":17},{"ruleId":"136","severity":1,"message":"145","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":16},{"ruleId":"136","severity":1,"message":"145","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":16},{"ruleId":"149","severity":1,"message":"150","line":46,"column":82,"nodeType":"151","endLine":46,"endColumn":97},{"ruleId":"136","severity":1,"message":"146","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"152","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":13},{"ruleId":"136","severity":1,"message":"140","line":4,"column":15,"nodeType":"138","messageId":"139","endLine":4,"endColumn":24},{"ruleId":"136","severity":1,"message":"153","line":12,"column":12,"nodeType":"138","messageId":"139","endLine":12,"endColumn":24},{"ruleId":"136","severity":1,"message":"154","line":12,"column":26,"nodeType":"138","messageId":"139","endLine":12,"endColumn":41},{"ruleId":"136","severity":1,"message":"155","line":13,"column":12,"nodeType":"138","messageId":"139","endLine":13,"endColumn":24},{"ruleId":"136","severity":1,"message":"156","line":13,"column":26,"nodeType":"138","messageId":"139","endLine":13,"endColumn":41},{"ruleId":"157","severity":1,"message":"158","line":31,"column":25,"nodeType":"159","endLine":31,"endColumn":133},{"ruleId":"157","severity":1,"message":"158","line":34,"column":25,"nodeType":"159","endLine":34,"endColumn":122},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'Skills' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Sidebar' is defined but never used.","'FiChevronRight' is defined but never used.",["160"],["161"],"'Button' is defined but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'swiper' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Col' is defined but never used.","'displayEmail' is assigned a value but never used.","'setDisplayEmail' is assigned a value but never used.","'displayPhone' is assigned a value but never used.","'setDisplayPhone' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]