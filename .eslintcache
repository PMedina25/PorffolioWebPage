[{"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\index.js":"1","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\ApolloProvider.js":"2","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\App.js":"3","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Projects.js":"4","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\MainPage.js":"5","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Footer.js":"6","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Navbar.js":"7","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\AboutMe.js":"8","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Skills.js":"9","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Home.js":"10","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Contact.js":"11","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\graphql.js":"12","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectCard.js":"13","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\Projects.js":"14","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\Organizations.js":"15","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectInfo.js":"16","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\OrganizationCard.js":"17","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\get-technology-icon.js":"18","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\SliderCard.js":"19"},{"size":261,"mtime":1610109813052,"results":"20","hashOfConfig":"21"},{"size":341,"mtime":1610111067264,"results":"22","hashOfConfig":"21"},{"size":566,"mtime":1610195724370,"results":"23","hashOfConfig":"21"},{"size":5300,"mtime":1610195724416,"results":"24","hashOfConfig":"21"},{"size":697,"mtime":1610195724414,"results":"25","hashOfConfig":"21"},{"size":2017,"mtime":1610195724379,"results":"26","hashOfConfig":"21"},{"size":646,"mtime":1610189917278,"results":"27","hashOfConfig":"21"},{"size":2849,"mtime":1610204175677,"results":"28","hashOfConfig":"21"},{"size":7128,"mtime":1610206044704,"results":"29","hashOfConfig":"21"},{"size":1814,"mtime":1609958515220,"results":"30","hashOfConfig":"21"},{"size":1395,"mtime":1609958515212,"results":"31","hashOfConfig":"21"},{"size":477,"mtime":1610195724430,"results":"32","hashOfConfig":"21"},{"size":1343,"mtime":1610195724387,"results":"33","hashOfConfig":"21"},{"size":3454,"mtime":1610195724391,"results":"34","hashOfConfig":"21"},{"size":574,"mtime":1610109813014,"results":"35","hashOfConfig":"21"},{"size":2010,"mtime":1610195724389,"results":"36","hashOfConfig":"21"},{"size":7903,"mtime":1610109813012,"results":"37","hashOfConfig":"21"},{"size":2980,"mtime":1610195724418,"results":"38","hashOfConfig":"21"},{"size":755,"mtime":1610109813016,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"insojy",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\index.js",[],["85","86"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\ApolloProvider.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\App.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\Projects.js",["87","88"],"import React, { useEffect } from 'react';\r\nimport { Link, useLocation, withRouter } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { FETCH_PROJECTS_QUERY } from '../utils/graphql';\r\n\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nimport ProjectCard from '../components/projects/ProjectCard';\r\n\r\nconst Projects = () => {\r\n    const {\r\n        loading,\r\n        error,\r\n        data\r\n    } = useQuery(FETCH_PROJECTS_QUERY);\r\n\r\n    useEffect(() => {\r\n        window.scroll({\r\n            'top': 0,\r\n            'left': 0,\r\n            'behaviour': 'auto'\r\n        });\r\n    }, []);\r\n\r\n    // TODO: Add Spinner\r\n    if (loading) {\r\n        return <p>Loading...</p>;\r\n    }\r\n    if (error) {\r\n    return <p>Error:(</p>;\r\n    }\r\n\r\n    return (\r\n        <div id=\"all-projects\">\r\n            <Container>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Link to=\"/\" className=\"btn btn-light\">\r\n                            Back to main page\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <div id=\"main-projects\">\r\n                    <h1>Professional and Academic Projects</h1>\r\n                    <div className=\"grid-all-projects\">\r\n                        {\r\n                            data.getProjects &&\r\n                            data.getProjects\r\n                                .filter(project => project.category === 'professional' || project.category === 'academic')\r\n                                .map(project => {\r\n                                    return (\r\n                                        <div className=\"all-projects-grid-item\">\r\n                                            <ProjectCard\r\n                                                key={project.id}\r\n                                                title={project.title} \r\n                                                description={project.description}\r\n                                                technologies={project.technologies}\r\n                                                startDate={project.startDate}\r\n                                                endDate={project.endDate}\r\n                                                url={project.url}\r\n                                                image={project.image}\r\n                                                 />\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div id=\"personal-projects\">\r\n                    <h1>Personal Projects</h1>\r\n                    <div className=\"grid-all-projects\">\r\n                    {\r\n                        data.getProjects &&\r\n                        data.getProjects\r\n                            .filter(project => project.category === 'personal')\r\n                            .map(project => {\r\n                                return (\r\n                                    <div className=\"all-projects-grid-item\">\r\n                                        <ProjectCard\r\n                                            key={project.id}\r\n                                            title={project.title} \r\n                                            description={project.description}\r\n                                            technologies={project.technologies}\r\n                                            startDate={project.startDate}\r\n                                            endDate={project.endDate}\r\n                                            url={project.url}\r\n                                            image={project.image} />\r\n                                    </div>\r\n                                )\r\n                            })\r\n                    }\r\n                    </div>\r\n                </div>\r\n                <div id=\"other-projects\">\r\n                    <h1>Other Projects</h1>\r\n                    <div className=\"grid-all-projects\">\r\n                    {\r\n                        data.getProjects &&\r\n                        data.getProjects\r\n                            .filter(project => project.category === 'others')\r\n                            .map(project => {\r\n                                return (\r\n                                    <div className=\"all-projects-grid-item\">\r\n                                        <ProjectCard\r\n                                            key={project.id}\r\n                                            title={project.title} \r\n                                            description={project.description}\r\n                                            technologies={project.technologies}\r\n                                            startDate={project.startDate}\r\n                                            endDate={project.endDate}\r\n                                            url={project.url}\r\n                                            image={project.image} />\r\n                                    </div>\r\n                                )\r\n                            })\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\pages\\MainPage.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Footer.js",["89","90","91","92","93","94","95","96","97","98"],"import React from 'react';\r\n\r\nimport { Button, Card, CardDeck, Col, Container, Form, Image, Row  } from 'react-bootstrap';\r\n\r\nimport { FaLinkedin, FaGithub, FaReact, FaBootstrap, FaNodeJs } from 'react-icons/fa';\r\nimport { HiOutlineMail } from 'react-icons/hi';\r\nimport { SiApollographql, SiGraphql, SiMongodb } from 'react-icons/si';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container fluid>\r\n              <Row>\r\n                <Col id=\"social-networks\" md={6}>\r\n                  <a href=\"https://www.linkedin.com/in/pablo-medina-rodr%C3%ADguez-a3a8b9135/\" alt=\"linkedin profile\" target=\"_blank\" className=\"btn\">\r\n                    <FaLinkedin className=\"social-network-icon\" />\r\n                  </a>\r\n                  <a className=\"social-network-icon\" href=\"https://github.com/PMedina25\" alt=\"github profile\" target=\"_blank\" className=\"btn\">\r\n                    <FaGithub className=\"social-network-icon\" />\r\n                  </a>\r\n                  <a className=\"social-network-icon\" href=\"mailto:pablo.medina.us@gmail.com\" alt=\"email account\" target=\"_blank\" className=\"btn\">\r\n                    <HiOutlineMail className=\"social-network-icon\" />\r\n                  </a>\r\n                </Col>\r\n                <Col id=\"technologies\" md={6}>\r\n                  <span>Developed with:</span>\r\n                  <FaReact size={32} style={{'paddingLeft': '12', 'color': 'white'}} />\r\n                  <FaBootstrap size={32} style={{'paddingLeft': '12', 'color': 'white'}} />\r\n                  <FaNodeJs size={32} style={{'paddingLeft': '12', 'color': 'white'}} />\r\n                  <SiMongodb size={32} style={{'paddingLeft': '12', 'color': 'white'}} />\r\n                  <SiApollographql size={32} style={{'paddingLeft': '12', 'color': 'white'}} />\r\n                  <SiGraphql size={32} style={{'paddingLeft': '12', 'color': 'white'}} />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Navbar.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\AboutMe.js",["99","100","101","102"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Skills.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Home.js",["103","104","105","106","107","108","109","110","111","112","113","114","115"],"import React from 'react'\r\n\r\nimport profilePhoto from '../images/FotoPabloMedina.png';\r\n\r\nimport { Button, Card, CardDeck, Col, Container, Form, Image, Row  } from 'react-bootstrap';\r\nimport { HiOutlineMail } from 'react-icons/hi';\r\n\r\n\r\nimport { FaLinkedin, FaGithub, FaReact, FaBootstrap, FaNodeJs } from 'react-icons/fa';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Row id=\"home\">\r\n            <Col md={12}>\r\n                <Row>\r\n                    <Col className=\"m-auto text-center\" lg={4} md={6}>\r\n                        <Image id=\"profile-image\" src={profilePhoto} alt=\"Photo of Pablo\" roundedCircle />\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"text-center\">\r\n                    <h1 className=\"display-4 text-center\">Pablo Medina</h1>\r\n                    <p className=\"lead text-center\">Full Stack Developer (React and Node)</p>\r\n                    <p>\r\n                        <a href=\"https://www.linkedin.com/in/pablo-medina-rodr%C3%ADguez-a3a8b9135/\" alt=\"linkedin profile\" target=\"_blank\" className=\"btn\">\r\n                            <FaLinkedin className=\"social-network-icon\" />\r\n                        </a>\r\n                        <a className=\"social-network-icon\" href=\"https://github.com/PMedina25\" alt=\"github profile\" target=\"_blank\" className=\"btn\">\r\n                            <FaGithub className=\"social-network-icon\" />\r\n                        </a>\r\n                        <a className=\"social-network-icon\" href=\"mailto:pablo.medina.us@gmail.com\" alt=\"email account\" target=\"_blank\" className=\"btn\">\r\n                            <HiOutlineMail className=\"social-network-icon\" />\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\Contact.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\graphql.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectCard.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\Projects.js",["116"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { FETCH_PROJECTS_QUERY } from '../../utils/graphql';\r\n\r\nimport { Button, CardDeck, Container } from 'react-bootstrap';\r\n\r\nimport { FiChevronRight } from 'react-icons/fi';\r\n\r\nimport ProjectCard from './ProjectCard';\r\n\r\nconst Projects = () => {\r\n    const {\r\n        loading,\r\n        error,\r\n        data\r\n    } = useQuery(FETCH_PROJECTS_QUERY);\r\n\r\n    // TODO: Add Spinner\r\n    if (loading) {\r\n        return <p>Loading...</p>;\r\n    }\r\n    if (error) {\r\n    return <p>Error:(</p>;\r\n    }\r\n\r\n    return (\r\n        <Container id=\"projects\" fluid>\r\n            <h1 style={{'textAlign': 'center'}}>Projects</h1>\r\n            <CardDeck>\r\n                {\r\n                    data.getProjects &&\r\n                    data.getProjects\r\n                        .filter(project => project.id === '5ff8368da728a819889de758')\r\n                        .map(project => <ProjectCard \r\n                                            key={project.id}\r\n                                            title={project.title} \r\n                                            description={project.description}\r\n                                            technologies={project.technologies}\r\n                                            startDate={project.startDate}\r\n                                            endDate={project.endDate}\r\n                                            url={project.url}\r\n                                            image={project.image} />)\r\n                }\r\n                {\r\n                    data.getProjects\r\n                        .filter(project => project.id === '5ff8381ba728a819889de759')\r\n                        .map(project => <ProjectCard \r\n                                            key={project.id}\r\n                                            title={project.title} \r\n                                            description={project.description}\r\n                                            technologies={project.technologies}\r\n                                            startDate={project.startDate}\r\n                                            endDate={project.endDate}\r\n                                            url={project.url}\r\n                                            image={project.image} />)\r\n                }\r\n                {\r\n                    data.getProjects\r\n                        .filter(project => project.id === '5ff82c39a728a819889de752')\r\n                        .map(project => <ProjectCard \r\n                                            key={project.id}\r\n                                            title={project.title} \r\n                                            description={project.description}\r\n                                            technologies={project.technologies}\r\n                                            startDate={project.startDate}\r\n                                            endDate={project.endDate}\r\n                                            url={project.url}\r\n                                            image={project.image} />)\r\n                }\r\n            </CardDeck>\r\n            <Link to={'/projects'} id=\"btn-show-all\" className=\"btn-project btn\">\r\n                Show all\r\n                <FiChevronRight id=\"show-all-arrow\" size={32} fontWeight={700}/>\r\n            </Link>\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Projects;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\Organizations.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\projects\\ProjectInfo.js",["117"],"import React from 'react';\r\n\r\nimport { Button, Image, Modal } from 'react-bootstrap';\r\nimport { DiVim } from 'react-icons/di';\r\n\r\nimport { getTechnologyIcon } from '../../utils/get-technology-icon';\r\n\r\nconst ProjectInfo = (props) => {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            className=\"project-modal\"\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {props.title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Image className=\"modal-image\" src={props.image} />\r\n                <div className=\"project-modal-content\">\r\n                    <div className=\"project-modal-description\">\r\n                        <p style={{'color': 'black'}}>\r\n                            {props.description}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"project-technologies-grid\">\r\n                        {props.technologies.map((technology, index) => {\r\n                            return (\r\n                                <div key={index} className=\"project-grid-item\">\r\n                                    {getTechnologyIcon(technology)}\r\n                                    <div className=\"technology-name\">\r\n                                        {technology}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                \r\n            </Modal.Body>\r\n            {props.url &&\r\n                <Modal.Footer>\r\n                    <Button className=\"btn-project\" type=\"button\" href={props.url} target=\"_blank\">Go to project</Button>\r\n                </Modal.Footer>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ProjectInfo;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\OrganizationCard.js",["118","119","120"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\n\r\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\r\n\r\nimport SliderCard from './SliderCard';\r\n\r\nconst OrganizationCard = ({ data }) => {\r\n    const eduOrgs = data.getOrganizations.filter(organization => organization.type === 'education');\r\n    const expOrgs = data.getOrganizations.filter(organization => organization.type === 'experience');\r\n    const certOrgs = data.getOrganizations.filter(organization => organization.type === 'certification');\r\n\r\n    const [eduOrganizations, setEduOrganizations] = useState(eduOrgs);\r\n    const [expOrganizations, setExpOrganizations] = useState(expOrgs);\r\n    const [certOrganizations, setCertOrganizations] = useState(certOrgs);\r\n    const [eduIndex, setEduIndex] = useState(0);\r\n    const [expIndex, setExpIndex] = useState(0);\r\n    const [certIndex, setCertIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n      const lastEduIndex = eduOrganizations.length - 1;\r\n\r\n      if (eduIndex < 0) {\r\n        setEduIndex(lastEduIndex);\r\n      }\r\n      if (eduIndex > lastEduIndex) {\r\n        setEduIndex(0);\r\n      }\r\n    }, [eduIndex, eduOrganizations]);\r\n\r\n    useEffect(() => {\r\n        const lastExpIndex = expOrganizations.length - 1;\r\n\r\n        if (expIndex < 0) {\r\n            setExpIndex(lastExpIndex);\r\n          }\r\n        if (expIndex > lastExpIndex) {\r\n            setExpIndex(0);\r\n        }\r\n    }, [expIndex, expOrganizations]);\r\n\r\n    useEffect(() => {\r\n        const lastCertIndex = certOrganizations.length - 1;\r\n\r\n        if (certIndex < 0) {\r\n            setCertIndex(lastCertIndex);\r\n          }\r\n        if (certIndex > lastCertIndex) {\r\n            setCertIndex(0);\r\n        }\r\n    }, [certIndex, certOrganizations])\r\n\r\n    useEffect(() => {\r\n      let eduSlider = setInterval(() => {\r\n        setEduIndex(eduIndex + 1);\r\n      }, 5000);\r\n      return () => clearInterval(eduSlider);\r\n    }, [eduIndex]);\r\n\r\n    useEffect(() => {\r\n      let expSlider = setInterval(() => {\r\n        setExpIndex(expIndex + 1);\r\n      }, 5000);\r\n      return () => clearInterval(expSlider);\r\n    }, [expIndex]);\r\n\r\n    useEffect(() => {\r\n      let certSlider = setInterval(() => {\r\n        setCertIndex(certIndex + 1);\r\n      }, 5000);\r\n      return () => clearInterval(certSlider);\r\n    }, [certIndex]);\r\n\r\n    return (\r\n        <Container id=\"organizations\" className=\"bg-light\" fluid>\r\n            <Row>\r\n              <Col className=\"card-column\" md={4}>\r\n                <h1>Education</h1>\r\n                <div className=\"cards-container\">\r\n                    {eduOrganizations &&\r\n                    eduOrganizations\r\n                    .map((organization, organizationIndex) => {\r\n                        \r\n                        let position = 'nextSlide';\r\n                        if (organizationIndex === eduIndex) {\r\n                        position = 'activeSlide';\r\n                        }\r\n                        if (organizationIndex === eduIndex - 1 || (eduIndex === 0 && organizationIndex === eduOrganizations.length - 1)) {\r\n                        position = 'lastSlide';\r\n                        }\r\n\r\n                        return (\r\n                            <Card className={\"m-auto slider-card \" + position}>\r\n                                <FiChevronLeft className=\"left-arrow-slider\" onClick={() => setEduIndex(eduIndex - 1)} />\r\n                                <SliderCard\r\n                                    key={organization.id} \r\n                                    name={organization.name} \r\n                                    description={organization.description} \r\n                                    startDate={organization.startDate} \r\n                                    endDate={organization.endDate} \r\n                                    url={organization.url} \r\n                                    logo={organization.image} />\r\n                                <FiChevronRight className=\"right-arrow-slider\" onClick={() => setEduIndex(eduIndex + 1)} />\r\n                            </Card>\r\n                        );\r\n                    })\r\n                    }\r\n                </div>\r\n              </Col>\r\n              <Col className=\"card-column\" md={4}>\r\n                <h1>Experience</h1>\r\n                <div className=\"cards-container\">\r\n                    {expOrganizations &&\r\n                    expOrganizations\r\n                    .map((organization, organizationIndex) => {\r\n                        \r\n                        let position = 'nextSlide';\r\n                        if (organizationIndex === expIndex) {\r\n                        position = 'activeSlide';\r\n                        }\r\n                        \r\n                        if (organizationIndex === expIndex - 1 || (expIndex === 0 && organizationIndex === expOrganizations.length - 1)) {\r\n                        position = 'lastSlide';\r\n                        }\r\n                        \r\n\r\n                        return (\r\n                            <Card className={\"m-auto slider-card \" + position}>\r\n                                <FiChevronLeft className=\"left-arrow-slider\" onClick={() => setExpIndex(expIndex - 1)} />\r\n                                <SliderCard\r\n                                    key={organization.id} \r\n                                    name={organization.name} \r\n                                    description={organization.description} \r\n                                    startDate={organization.startDate} \r\n                                    endDate={organization.endDate} \r\n                                    url={organization.url} \r\n                                    logo={organization.image} />\r\n                                <FiChevronRight className=\"right-arrow-slider\" onClick={() => setExpIndex(expIndex + 1)} />\r\n                            </Card>\r\n                        );\r\n                    })\r\n                    }\r\n                </div>\r\n              </Col>\r\n              <Col className=\"card-column\" md={4}>\r\n                <h1>Certifications</h1>\r\n                <div className=\"cards-container\">\r\n                    {certOrganizations &&\r\n                    certOrganizations\r\n                    .map((organization, organizationIndex) => {\r\n                        \r\n                        let position = 'nextSlide';\r\n                        if (organizationIndex === certIndex) {\r\n                        position = 'activeSlide';\r\n                        }\r\n                        if (organizationIndex === certIndex - 1 || (certIndex === 0 && organizationIndex === certOrganizations.length - 1)) {\r\n                        position = 'lastSlide';\r\n                        }\r\n\r\n                        return (\r\n                            <Card className={\"m-auto slider-card \" + position}>\r\n                                <FiChevronLeft className=\"left-arrow-slider\" onClick={() => setCertIndex(certIndex - 1)} />\r\n                                <SliderCard\r\n                                    key={organization.id} \r\n                                    name={organization.name} \r\n                                    description={organization.description} \r\n                                    startDate={organization.startDate} \r\n                                    endDate={organization.endDate} \r\n                                    url={organization.url} \r\n                                    logo={organization.image} />\r\n                                <FiChevronRight className=\"right-arrow-slider\" onClick={() => setCertIndex(certIndex + 1)} />\r\n                            </Card>\r\n                        );\r\n                    })\r\n                    }\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n    )\r\n}\r\n\r\nexport default OrganizationCard;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\utils\\get-technology-icon.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\PortfolioWebPage\\portfolio-web-page-client\\src\\components\\organizations\\SliderCard.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":2,"column":16,"nodeType":"127","messageId":"128","endLine":2,"endColumn":27},{"ruleId":"125","severity":1,"message":"129","line":2,"column":29,"nodeType":"127","messageId":"128","endLine":2,"endColumn":39},{"ruleId":"125","severity":1,"message":"130","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":16},{"ruleId":"125","severity":1,"message":"131","line":3,"column":18,"nodeType":"127","messageId":"128","endLine":3,"endColumn":22},{"ruleId":"125","severity":1,"message":"132","line":3,"column":24,"nodeType":"127","messageId":"128","endLine":3,"endColumn":32},{"ruleId":"125","severity":1,"message":"133","line":3,"column":50,"nodeType":"127","messageId":"128","endLine":3,"endColumn":54},{"ruleId":"125","severity":1,"message":"134","line":3,"column":56,"nodeType":"127","messageId":"128","endLine":3,"endColumn":61},{"ruleId":"135","severity":1,"message":"136","line":15,"column":119,"nodeType":"137","endLine":15,"endColumn":134},{"ruleId":"135","severity":1,"message":"136","line":18,"column":111,"nodeType":"137","endLine":18,"endColumn":126},{"ruleId":"138","severity":1,"message":"139","line":18,"column":127,"nodeType":"137","endLine":18,"endColumn":142},{"ruleId":"135","severity":1,"message":"136","line":21,"column":114,"nodeType":"137","endLine":21,"endColumn":129},{"ruleId":"138","severity":1,"message":"139","line":21,"column":130,"nodeType":"137","endLine":21,"endColumn":145},{"ruleId":"125","severity":1,"message":"140","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"141","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"142","line":1,"column":38,"nodeType":"127","messageId":"128","endLine":1,"endColumn":44},{"ruleId":"125","severity":1,"message":"143","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"125","severity":1,"message":"130","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":16},{"ruleId":"125","severity":1,"message":"131","line":5,"column":18,"nodeType":"127","messageId":"128","endLine":5,"endColumn":22},{"ruleId":"125","severity":1,"message":"132","line":5,"column":24,"nodeType":"127","messageId":"128","endLine":5,"endColumn":32},{"ruleId":"125","severity":1,"message":"144","line":5,"column":39,"nodeType":"127","messageId":"128","endLine":5,"endColumn":48},{"ruleId":"125","severity":1,"message":"133","line":5,"column":50,"nodeType":"127","messageId":"128","endLine":5,"endColumn":54},{"ruleId":"125","severity":1,"message":"145","line":9,"column":32,"nodeType":"127","messageId":"128","endLine":9,"endColumn":39},{"ruleId":"125","severity":1,"message":"146","line":9,"column":41,"nodeType":"127","messageId":"128","endLine":9,"endColumn":52},{"ruleId":"125","severity":1,"message":"147","line":9,"column":54,"nodeType":"127","messageId":"128","endLine":9,"endColumn":62},{"ruleId":"135","severity":1,"message":"136","line":24,"column":125,"nodeType":"137","endLine":24,"endColumn":140},{"ruleId":"135","severity":1,"message":"136","line":27,"column":117,"nodeType":"137","endLine":27,"endColumn":132},{"ruleId":"138","severity":1,"message":"139","line":27,"column":133,"nodeType":"137","endLine":27,"endColumn":148},{"ruleId":"135","severity":1,"message":"136","line":30,"column":120,"nodeType":"137","endLine":30,"endColumn":135},{"ruleId":"138","severity":1,"message":"139","line":30,"column":136,"nodeType":"137","endLine":30,"endColumn":151},{"ruleId":"125","severity":1,"message":"130","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":16},{"ruleId":"125","severity":1,"message":"148","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":15},{"ruleId":"125","severity":1,"message":"149","line":13,"column":30,"nodeType":"127","messageId":"128","endLine":13,"endColumn":49},{"ruleId":"125","severity":1,"message":"150","line":14,"column":30,"nodeType":"127","messageId":"128","endLine":14,"endColumn":49},{"ruleId":"125","severity":1,"message":"151","line":15,"column":31,"nodeType":"127","messageId":"128","endLine":15,"endColumn":51},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardDeck' is defined but never used.","'Form' is defined but never used.","'Image' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react/jsx-no-duplicate-props","No duplicate props allowed","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'ReactDOM' is defined but never used.","'Container' is defined but never used.","'FaReact' is defined but never used.","'FaBootstrap' is defined but never used.","'FaNodeJs' is defined but never used.","'DiVim' is defined but never used.","'setEduOrganizations' is assigned a value but never used.","'setExpOrganizations' is assigned a value but never used.","'setCertOrganizations' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]